No terminales inútiles en la gramática

   varios_identificadores2
   identificador_cuatro
   rango
   instruccion_asignacion
   op_asignacion
   varias_definicion_parametro
   definicion_parametro
   cero_uno_identificador
   instruccion_si
   cero_mas_instrucciones
   instruccion_casos
   caso
   uno_o_mas_casos
   entradas
   entrada
   varias_entradas
   cero_mas_expresiones1
   instruccion_bucle
   cero_mas_identificador1
   clausula_iteracion
   cero_o_uno_especificacion_tipo
   cero_o_uno_descendente
   cuando
   expresion_potencia
   expresion_posfija
   operador_posfijo
   expresion_unaria
   primario
   literal
   objeto
   varias_expresiones
   varias_ctc_cadena
   enumeraciones
   varias_clausulas_iteracion
   varias_clave_valor
   varias_campo_valor
   expresion_condicional
   clave_valor
   campo_valor
   expresion
   operadorOR
   operadorAND
   operadorNEG
   operadorASIG
   operadorDES
   operadorSR
   operadorMDM
   operadorPOT
   operadorINCDEC
   operadorUN


Terminales no usados en la gramática

   BUCLE
   CASOS
   CONSTANTE
   CUANDO
   DESCENDENTE
   EN
   ENTONCES
   FALSO
   MIENTRAS
   OBJETO
   OTRO
   PARA
   RANGO
   REPETIR
   SI
   SINO
   TABLA
   VERDADERO
   CTC_CARACTER
   CTC_CADENA
   CTC_ENTERA
   CTC_REAL
   DOS_PTOS
   CUATRO_PUNTOS
   ASIGNACION
   FLECHA
   INC
   DEC
   DESPI
   DESPD
   LEQ
   CEQ
   NEQ
   AND
   OR
   ASIG_SUMA
   ASIG_RESTA
   ASIG_MULT
   ASIG_DIV
   ASIG_RESTO
   ASIG_POT
   ASIG_DESPI
   ASIG_DESP
   LONGITUD
   TIPO_BASICO
   '^'
   '-'
   '.'
   '['
   ']'
   '{'
   '}'
   '~'
   '<'
   '>'
   '='
   '+'
   '*'
   '/'
   '\\'


Reglas inútiles en la gramática

  128 nombre: varios_identificadores2 IDENTIFICADOR

  129 varios_identificadores2: varios_identificadores2 identificador_cuatro

  130 identificador_cuatro: IDENTIFICADOR CUATRO_PUNTOS
  131                     | %empty

  132 declaracion_objeto: varios_identificadores ':' CONSTANTE especificacion_tipo ASIGNACION expresion ';'
  133                   | varios_identificadores ':' especificacion_tipo ASIGNACION expresion ';'

  134 cero_o_uno_rango: RANGO rango

  135 rango: expresion DOS_PTOS expresion
  136      | expresion DOS_PTOS expresion DOS_PTOS expresion

  137 tipo_tabla: TABLA '(' expresion DOS_PTOS expresion ')' DE especificacion_tipo

  138 campo: varios_identificadores ':' especificacion_tipo ASIGNACION expresion ';'

  139 cero_uno_expresion: ASIGNACION expresion

  140 instruccion: instruccion_asignacion
  141            | instruccion_si
  142            | instruccion_casos
  143            | instruccion_bucle

  144 instruccion_asignacion: objeto op_asignacion expresion ';'

  145 op_asignacion: ASIGNACION
  146              | ASIG_SUMA
  147              | ASIG_RESTA
  148              | ASIG_MULT
  149              | ASIG_DIV
  150              | ASIG_RESTO
  151              | ASIG_POT
  152              | ASIG_DESPI
  153              | ':'

  154 instruccion_devolver: DEVOLVER expresion ';'

  155 llamada_subprograma: nombre '(' varias_definicion_parametro ')'

  156 varias_definicion_parametro: varias_definicion_parametro ',' definicion_parametro
  157                            | definicion_parametro

  158 definicion_parametro: cero_uno_identificador expresion

  159 cero_uno_identificador: IDENTIFICADOR ASIGNACION
  160                       | %empty

  161 instruccion_si: SI expresion ENTONCES varias_instrucciones cero_mas_instrucciones FIN SI

  162 cero_mas_instrucciones: SINO varias_instrucciones
  163                       | %empty

  164 instruccion_casos: CASOS expresion ES uno_o_mas_casos FIN CASOS

  165 caso: CUANDO entradas FLECHA varias_instrucciones

  166 uno_o_mas_casos: uno_o_mas_casos caso
  167                | caso

  168 entradas: varias_entradas entrada

  169 entrada: expresion cero_mas_expresiones1
  170        | OTRO

  171 varias_entradas: varias_entradas entrada ':'
  172                | entrada ':'

  173 cero_mas_expresiones1: DOS_PTOS expresion
  174                      | %empty

  175 instruccion_bucle: cero_mas_identificador1 clausula_iteracion varias_instrucciones FIN BUCLE

  176 cero_mas_identificador1: IDENTIFICADOR ':'
  177                        | %empty

  178 clausula_iteracion: PARA IDENTIFICADOR cero_o_uno_especificacion_tipo EN expresion
  179                   | REPETIR IDENTIFICADOR cero_o_uno_especificacion_tipo EN rango cero_o_uno_descendente
  180                   | MIENTRAS expresion

  181 cero_o_uno_especificacion_tipo: ':' especificacion_tipo
  182                               | %empty

  183 cero_o_uno_descendente: DESCENDENTE
  184                       | %empty

  185 cuando: CUANDO expresion

  186 cero_o_uno_cuando: cuando

  187 expresion_potencia: expresion_posfija
  188                   | expresion_posfija '^' expresion_potencia

  189 expresion_posfija: expresion_unaria
  190                  | expresion_unaria operador_posfijo

  191 operador_posfijo: INC
  192                 | DEC

  193 expresion_unaria: primario
  194                 | '-' primario

  195 primario: literal
  196         | objeto
  197         | llamada_subprograma
  198         | OBJETO llamada_subprograma
  199         | enumeraciones
  200         | '(' expresion ')'

  201 literal: VERDADERO
  202        | FALSO
  203        | CTC_ENTERA
  204        | CTC_REAL
  205        | CTC_CARACTER
  206        | CTC_CADENA

  207 objeto: nombre
  208       | objeto '.' IDENTIFICADOR
  209       | objeto '[' varias_expresiones ']'
  210       | objeto '{' varias_ctc_cadena '}'

  211 varias_expresiones: varias_expresiones ',' expresion
  212                   | expresion

  213 varias_ctc_cadena: varias_ctc_cadena ',' CTC_CADENA
  214                  | CTC_CADENA

  215 enumeraciones: '[' expresion_condicional varias_clausulas_iteracion ']'
  216              | '[' varias_expresiones ']'
  217              | '{' varias_clave_valor '}'
  218              | '{' varias_campo_valor '}'

  219 varias_clausulas_iteracion: varias_clausulas_iteracion clausula_iteracion
  220                           | varias_clausulas_iteracion

  221 varias_clave_valor: varias_clave_valor ',' clave_valor
  222                   | clave_valor

  223 varias_campo_valor: varias_campo_valor ',' campo_valor
  224                   | campo_valor

  225 expresion_condicional: expresion
  226                      | SI expresion ENTONCES expresion
  227                      | SI expresion ENTONCES expresion SINO expresion

  228 clave_valor: CTC_CADENA FLECHA expresion

  229 campo_valor: IDENTIFICADOR FLECHA expresion

  230 expresion: operadorOR

  231 operadorOR: operadorOR OR operadorAND
  232           | operadorAND

  233 operadorAND: operadorAND AND operadorNEG
  234            | operadorNEG

  235 operadorNEG: '~' operadorASIG
  236            | operadorASIG

  237 operadorASIG: '<' operadorDES
  238             | '>' operadorDES
  239             | LEQ operadorDES
  240             | FLECHA operadorDES
  241             | '=' operadorDES
  242             | NEQ operadorDES
  243             | operadorDES

  244 operadorDES: operadorDES DESPI operadorSR
  245            | operadorDES DESPD operadorSR
  246            | operadorSR

  247 operadorSR: operadorSR '+' operadorMDM
  248           | operadorSR '-' operadorMDM
  249           | operadorMDM

  250 operadorMDM: operadorMDM '*' operadorPOT
  251            | operadorMDM '/' operadorPOT
  252            | operadorMDM '\\' operadorPOT
  253            | operadorPOT

  254 operadorPOT: operadorINCDEC '^' operadorPOT
  255            | operadorINCDEC

  256 operadorINCDEC: INC operadorMDM
  257               | DEC operadorMDM
  258               | operadorMDM

  259 operadorUN: '-' primario
  260           | primario


Estado 165 conflictos: 1 desplazamiento/reducción


Gramática

    0 $accept: programa $end

    1 programa: definicion_programa
    2         | definicion_libreria

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' codigo_programa

    4 codigo_programa: varias_librerias cuerpo_subprograma

    5 varias_librerias: varias_librerias libreria
    6                 | %empty

    7 libreria: IMPORTAR LIBRERIA nombre ';'
    8         | DE LIBRERIA nombre IMPORTAR varios_identificadores ';'
    9         | IMPORTAR LIBRERIA nombre COMO IDENTIFICADOR ';'

   10 varios_identificadores: varios_identificadores ',' IDENTIFICADOR
   11                       | IDENTIFICADOR

   12 nombre: %empty

   13 definicion_libreria: LIBRERIA IDENTIFICADOR ';' codigo_libreria

   14 codigo_libreria: varias_librerias varias_declaraciones
   15                | varias_librerias exportaciones varias_declaraciones

   16 varias_declaraciones: varias_declaraciones declaracion
   17                     | declaracion

   18 exportaciones: EXPORTAR varios_nombres ';'

   19 varios_nombres: varios_nombres ',' nombre
   20               | nombre

   21 declaracion: declaracion_objeto
   22            | declaracion_tipo
   23            | declaracion_subprograma

   24 declaracion_objeto: varios_identificadores ':' especificacion_tipo ';'

   25 especificacion_tipo: nombre
   26                    | tipo_no_estructurado

   27 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado ';'
   28                 | TIPO IDENTIFICADOR ES tipo_estructurado

   29 tipo_no_estructurado: tipo_escalar
   30                     | tipo_tabla
   31                     | tipo_diccionario

   32 tipo_escalar: cero_o_uno_signo tipo_basico cero_o_uno_longitud cero_o_uno_rango

   33 cero_o_uno_signo: SIGNO
   34                 | %empty

   35 cero_o_uno_longitud: longitud
   36                    | %empty

   37 cero_o_uno_rango: %empty

   38 longitud: CORTO
   39         | LARGO

   40 tipo_basico: BOOLEANO
   41            | CARACTER
   42            | ENTERO
   43            | REAL

   44 tipo_tabla: LISTA DE especificacion_tipo

   45 tipo_diccionario: DICCIONARIO DE especificacion_tipo

   46 tipo_estructurado: tipo_registro
   47                  | tipo_enumerado
   48                  | clase

   49 tipo_registro: REGISTRO varios_campos FIN REGISTRO

   50 varios_campos: varios_campos campo
   51              | campo

   52 campo: varios_identificadores ':' especificacion_tipo ';'

   53 tipo_enumerado: ENUMERACION varios_elemento_enumeracion FIN ENUMERACION
   54               | ENUMERACION DE tipo_escalar varios_elemento_enumeracion FIN ENUMERACION

   55 varios_elemento_enumeracion: varios_elemento_enumeracion ',' elemento_enumeracion
   56                            | elemento_enumeracion

   57 elemento_enumeracion: IDENTIFICADOR cero_uno_expresion

   58 cero_uno_expresion: %empty

   59 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN CLASE

   60 cero_uno_ultima: ULTIMA
   61                | %empty

   62 cero_uno_superclases: superclases
   63                     | %empty

   64 superclases: '(' varios_nombres ')'

   65 declaracion_componente: componente
   66                       | visibilidad componente

   67 varias_declaraciones_componente: varias_declaraciones_componente declaracion_componente
   68                                | declaracion_componente

   69 visibilidad: PUBLICO
   70            | PROTEGIDO
   71            | PRIVADO

   72 componente: declaracion_tipo
   73           | declaracion_objeto
   74           | varios_modificadores declaracion_subprograma
   75           | declaracion_subprograma

   76 varios_modificadores: varios_modificadores ',' modificador
   77                     | modificador

   78 modificador: CONSTRUCTOR
   79            | DESTRUCTOR
   80            | GENERICO
   81            | ABSTRACTO
   82            | ESPECIFICO
   83            | FINAL

   84 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma SUBPROGRAMA

   85 cabecera_subprograma: IDENTIFICADOR cero_uno_parametrizacion cero_uno_tipoResultado

   86 cero_uno_parametrizacion: parametrizacion
   87                         | %empty

   88 cero_uno_tipoResultado: tipo_resultado
   89                       | %empty

   90 parametrizacion: '(' varias_declaraciones_parametros declaracion_parametros ')'

   91 declaracion_parametros: varios_identificadores ':' especificacion_tipo cero_uno_expresion
   92                       | varios_identificadores ':' modo especificacion_tipo cero_uno_expresion

   93 varias_declaraciones_parametros: varias_declaraciones_parametros declaracion_parametros ';'
   94                                | %empty

   95 modo: VALOR
   96     | REFERENCIA

   97 tipo_resultado: DEVOLVER especificacion_tipo

   98 cuerpo_subprograma: cero_o_mas_declaraciones PRINCIPIO varias_instrucciones FIN

   99 cero_o_mas_declaraciones: varias_declaraciones declaracion
  100                         | %empty

  101 varias_instrucciones: varias_instrucciones instruccion
  102                     | instruccion

  103 instruccion: instruccion_devolver
  104            | instruccion_llamada
  105            | instruccion_interrupcion
  106            | instruccion_lanzamiento_excepcion
  107            | instruccion_captura_excepcion
  108            | ';'

  109 instruccion_devolver: DEVOLVER ';'

  110 instruccion_llamada: llamada_subprograma ';'

  111 llamada_subprograma: nombre '(' ')'

  112 instruccion_interrupcion: SIGUIENTE cero_o_uno_cuando ';'
  113                         | SALIR cero_o_uno_de_identificador cero_o_uno_cuando ';'

  114 cero_o_uno_cuando: %empty

  115 cero_o_uno_de_identificador: DE IDENTIFICADOR
  116                            | %empty

  117 instruccion_lanzamiento_excepcion: LANZA nombre ';'

  118 instruccion_captura_excepcion: PRUEBA varias_instrucciones clausulas FIN PRUEBA

  119 clausulas: clausulas_excepcion
  120          | clausulas_excepcion clausula_finalmente
  121          | clausula_finalmente

  122 clausulas_excepcion: varias_clausula_excepcion_especifica clausula_excepcion_general

  123 varias_clausula_excepcion_especifica: varias_clausula_excepcion_especifica clausula_excepcion_especifica
  124                                     | %empty

  125 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' varias_instrucciones

  126 clausula_excepcion_general: EXCEPCION varias_instrucciones

  127 clausula_finalmente: FINALMENTE varias_instrucciones


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 64 90 111 125
')' (41) 64 90 111 125
'*' (42)
'+' (43)
',' (44) 10 19 55 76
'-' (45)
'.' (46)
'/' (47)
':' (58) 24 52 91 92
';' (59) 3 7 8 9 13 18 24 27 52 93 108 109 110 112 113 117
'<' (60)
'=' (61)
'>' (62)
'[' (91)
'\\' (92)
']' (93)
'^' (94)
'{' (123)
'}' (125)
'~' (126)
error (256)
ABSTRACTO (258) 81
BOOLEANO (259) 40
BUCLE (260)
CARACTER (261) 41
CASOS (262)
CLASE (263) 59
COMO (264) 9
CONSTANTE (265)
CONSTRUCTOR (266) 78
CORTO (267) 38
CUANDO (268)
DE (269) 8 44 45 54 115
DESCENDENTE (270)
DESTRUCTOR (271) 79
DEVOLVER (272) 97 109
DICCIONARIO (273) 45
EN (274)
ENTERO (275) 42
ENTONCES (276)
ENUMERACION (277) 53 54
ES (278) 27 28
ESPECIFICO (279) 82
EXCEPCION (280) 125 126
EXPORTAR (281) 18
FALSO (282)
FIN (283) 49 53 54 59 98 118
FINAL (284) 83
FINALMENTE (285) 127
GENERICO (286) 80
IMPORTAR (287) 7 8 9
LARGO (288) 39
LANZA (289) 117
LIBRERIA (290) 7 8 9 13
LISTA (291) 44
MIENTRAS (292)
OBJETO (293)
OTRO (294)
PARA (295)
PRINCIPIO (296) 98
PRIVADO (297) 71
PROGRAMA (298) 3
PROTEGIDO (299) 70
PRUEBA (300) 118
PUBLICO (301) 69
RANGO (302)
REAL (303) 43
REFERENCIA (304) 96
REGISTRO (305) 49
REPETIR (306)
SALIR (307) 113
SI (308)
SIGNO (309) 33
SIGUIENTE (310) 112
SINO (311)
SUBPROGRAMA (312) 84
TABLA (313)
TIPO (314) 27 28
ULTIMA (315) 60
VALOR (316) 95
VERDADERO (317)
CTC_CARACTER (318)
CTC_CADENA (319)
IDENTIFICADOR (320) 3 9 10 11 13 27 28 57 85 115
CTC_ENTERA (321)
CTC_REAL (322)
DOS_PTOS (323)
CUATRO_PUNTOS (324)
ASIGNACION (325)
FLECHA (326)
INC (327)
DEC (328)
DESPI (329)
DESPD (330)
LEQ (331)
CEQ (332)
NEQ (333)
AND (334)
OR (335)
ASIG_SUMA (336)
ASIG_RESTA (337)
ASIG_MULT (338)
ASIG_DIV (339)
ASIG_RESTO (340)
ASIG_POT (341)
ASIG_DESPI (342)
ASIG_DESP (343)
LONGITUD (344)
TIPO_BASICO (345)


No terminales con las reglas donde aparecen

$accept (111)
    en la izquierda: 0
programa (112)
    en la izquierda: 1 2, en la derecha: 0
definicion_programa (113)
    en la izquierda: 3, en la derecha: 1
codigo_programa (114)
    en la izquierda: 4, en la derecha: 3
varias_librerias (115)
    en la izquierda: 5 6, en la derecha: 4 5 14 15
libreria (116)
    en la izquierda: 7 8 9, en la derecha: 5
varios_identificadores (117)
    en la izquierda: 10 11, en la derecha: 8 10 24 52 91 92
nombre (118)
    en la izquierda: 12, en la derecha: 7 8 9 19 20 25 111 117 125
definicion_libreria (119)
    en la izquierda: 13, en la derecha: 2
codigo_libreria (120)
    en la izquierda: 14 15, en la derecha: 13
varias_declaraciones (121)
    en la izquierda: 16 17, en la derecha: 14 15 16 99
exportaciones (122)
    en la izquierda: 18, en la derecha: 15
varios_nombres (123)
    en la izquierda: 19 20, en la derecha: 18 19 64
declaracion (124)
    en la izquierda: 21 22 23, en la derecha: 16 17 99
declaracion_objeto (125)
    en la izquierda: 24, en la derecha: 21 73
especificacion_tipo (126)
    en la izquierda: 25 26, en la derecha: 24 44 45 52 91 92 97
declaracion_tipo (127)
    en la izquierda: 27 28, en la derecha: 22 72
tipo_no_estructurado (128)
    en la izquierda: 29 30 31, en la derecha: 26 27
tipo_escalar (129)
    en la izquierda: 32, en la derecha: 29 54
cero_o_uno_signo (130)
    en la izquierda: 33 34, en la derecha: 32
cero_o_uno_longitud (131)
    en la izquierda: 35 36, en la derecha: 32
cero_o_uno_rango (132)
    en la izquierda: 37, en la derecha: 32
longitud (133)
    en la izquierda: 38 39, en la derecha: 35
tipo_basico (134)
    en la izquierda: 40 41 42 43, en la derecha: 32
tipo_tabla (135)
    en la izquierda: 44, en la derecha: 30
tipo_diccionario (136)
    en la izquierda: 45, en la derecha: 31
tipo_estructurado (137)
    en la izquierda: 46 47 48, en la derecha: 28
tipo_registro (138)
    en la izquierda: 49, en la derecha: 46
varios_campos (139)
    en la izquierda: 50 51, en la derecha: 49 50
campo (140)
    en la izquierda: 52, en la derecha: 50 51
tipo_enumerado (141)
    en la izquierda: 53 54, en la derecha: 47
varios_elemento_enumeracion (142)
    en la izquierda: 55 56, en la derecha: 53 54 55
elemento_enumeracion (143)
    en la izquierda: 57, en la derecha: 55 56
cero_uno_expresion (144)
    en la izquierda: 58, en la derecha: 57 91 92
clase (145)
    en la izquierda: 59, en la derecha: 48
cero_uno_ultima (146)
    en la izquierda: 60 61, en la derecha: 59
cero_uno_superclases (147)
    en la izquierda: 62 63, en la derecha: 59
superclases (148)
    en la izquierda: 64, en la derecha: 62
declaracion_componente (149)
    en la izquierda: 65 66, en la derecha: 67 68
varias_declaraciones_componente (150)
    en la izquierda: 67 68, en la derecha: 59 67
visibilidad (151)
    en la izquierda: 69 70 71, en la derecha: 66
componente (152)
    en la izquierda: 72 73 74 75, en la derecha: 65 66
varios_modificadores (153)
    en la izquierda: 76 77, en la derecha: 74 76
modificador (154)
    en la izquierda: 78 79 80 81 82 83, en la derecha: 76 77
declaracion_subprograma (155)
    en la izquierda: 84, en la derecha: 23 74 75
cabecera_subprograma (156)
    en la izquierda: 85, en la derecha: 84
cero_uno_parametrizacion (157)
    en la izquierda: 86 87, en la derecha: 85
cero_uno_tipoResultado (158)
    en la izquierda: 88 89, en la derecha: 85
parametrizacion (159)
    en la izquierda: 90, en la derecha: 86
declaracion_parametros (160)
    en la izquierda: 91 92, en la derecha: 90 93
varias_declaraciones_parametros (161)
    en la izquierda: 93 94, en la derecha: 90 93
modo (162)
    en la izquierda: 95 96, en la derecha: 92
tipo_resultado (163)
    en la izquierda: 97, en la derecha: 88
cuerpo_subprograma (164)
    en la izquierda: 98, en la derecha: 4 84
cero_o_mas_declaraciones (165)
    en la izquierda: 99 100, en la derecha: 98
varias_instrucciones (166)
    en la izquierda: 101 102, en la derecha: 98 101 118 125 126 127
instruccion (167)
    en la izquierda: 103 104 105 106 107 108, en la derecha: 101 102
instruccion_devolver (168)
    en la izquierda: 109, en la derecha: 103
instruccion_llamada (169)
    en la izquierda: 110, en la derecha: 104
llamada_subprograma (170)
    en la izquierda: 111, en la derecha: 110
instruccion_interrupcion (171)
    en la izquierda: 112 113, en la derecha: 105
cero_o_uno_cuando (172)
    en la izquierda: 114, en la derecha: 112 113
cero_o_uno_de_identificador (173)
    en la izquierda: 115 116, en la derecha: 113
instruccion_lanzamiento_excepcion (174)
    en la izquierda: 117, en la derecha: 106
instruccion_captura_excepcion (175)
    en la izquierda: 118, en la derecha: 107
clausulas (176)
    en la izquierda: 119 120 121, en la derecha: 118
clausulas_excepcion (177)
    en la izquierda: 122, en la derecha: 119 120
varias_clausula_excepcion_especifica (178)
    en la izquierda: 123 124, en la derecha: 122 123
clausula_excepcion_especifica (179)
    en la izquierda: 125, en la derecha: 123
clausula_excepcion_general (180)
    en la izquierda: 126, en la derecha: 122
clausula_finalmente (181)
    en la izquierda: 127, en la derecha: 120 121


Estado 0

    0 $accept: . programa $end

    LIBRERIA  desplazar e ir al estado 1
    PROGRAMA  desplazar e ir al estado 2

    programa             ir al estado 3
    definicion_programa  ir al estado 4
    definicion_libreria  ir al estado 5


Estado 1

   13 definicion_libreria: LIBRERIA . IDENTIFICADOR ';' codigo_libreria

    IDENTIFICADOR  desplazar e ir al estado 6


Estado 2

    3 definicion_programa: PROGRAMA . IDENTIFICADOR ';' codigo_programa

    IDENTIFICADOR  desplazar e ir al estado 7


Estado 3

    0 $accept: programa . $end

    $end  desplazar e ir al estado 8


Estado 4

    1 programa: definicion_programa .

    $default  reduce usando la regla 1 (programa)


Estado 5

    2 programa: definicion_libreria .

    $default  reduce usando la regla 2 (programa)


Estado 6

   13 definicion_libreria: LIBRERIA IDENTIFICADOR . ';' codigo_libreria

    ';'  desplazar e ir al estado 9


Estado 7

    3 definicion_programa: PROGRAMA IDENTIFICADOR . ';' codigo_programa

    ';'  desplazar e ir al estado 10


Estado 8

    0 $accept: programa $end .

    $default  aceptar


Estado 9

   13 definicion_libreria: LIBRERIA IDENTIFICADOR ';' . codigo_libreria

    $default  reduce usando la regla 6 (varias_librerias)

    varias_librerias  ir al estado 11
    codigo_libreria   ir al estado 12


Estado 10

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' . codigo_programa

    $default  reduce usando la regla 6 (varias_librerias)

    codigo_programa   ir al estado 13
    varias_librerias  ir al estado 14


Estado 11

    5 varias_librerias: varias_librerias . libreria
   14 codigo_libreria: varias_librerias . varias_declaraciones
   15                | varias_librerias . exportaciones varias_declaraciones

    DE             desplazar e ir al estado 15
    EXPORTAR       desplazar e ir al estado 16
    IMPORTAR       desplazar e ir al estado 17
    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    libreria                 ir al estado 21
    varios_identificadores   ir al estado 22
    varias_declaraciones     ir al estado 23
    exportaciones            ir al estado 24
    declaracion              ir al estado 25
    declaracion_objeto       ir al estado 26
    declaracion_tipo         ir al estado 27
    declaracion_subprograma  ir al estado 28


Estado 12

   13 definicion_libreria: LIBRERIA IDENTIFICADOR ';' codigo_libreria .

    $default  reduce usando la regla 13 (definicion_libreria)


Estado 13

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' codigo_programa .

    $default  reduce usando la regla 3 (definicion_programa)


Estado 14

    4 codigo_programa: varias_librerias . cuerpo_subprograma
    5 varias_librerias: varias_librerias . libreria

    DE             desplazar e ir al estado 15
    IMPORTAR       desplazar e ir al estado 17
    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    $default  reduce usando la regla 100 (cero_o_mas_declaraciones)

    libreria                  ir al estado 21
    varios_identificadores    ir al estado 22
    varias_declaraciones      ir al estado 29
    declaracion               ir al estado 25
    declaracion_objeto        ir al estado 26
    declaracion_tipo          ir al estado 27
    declaracion_subprograma   ir al estado 28
    cuerpo_subprograma        ir al estado 30
    cero_o_mas_declaraciones  ir al estado 31


Estado 15

    8 libreria: DE . LIBRERIA nombre IMPORTAR varios_identificadores ';'

    LIBRERIA  desplazar e ir al estado 32


Estado 16

   18 exportaciones: EXPORTAR . varios_nombres ';'

    $default  reduce usando la regla 12 (nombre)

    nombre          ir al estado 33
    varios_nombres  ir al estado 34


Estado 17

    7 libreria: IMPORTAR . LIBRERIA nombre ';'
    9         | IMPORTAR . LIBRERIA nombre COMO IDENTIFICADOR ';'

    LIBRERIA  desplazar e ir al estado 35


Estado 18

   84 declaracion_subprograma: SUBPROGRAMA . cabecera_subprograma cuerpo_subprograma SUBPROGRAMA

    IDENTIFICADOR  desplazar e ir al estado 36

    cabecera_subprograma  ir al estado 37


Estado 19

   27 declaracion_tipo: TIPO . IDENTIFICADOR ES tipo_no_estructurado ';'
   28                 | TIPO . IDENTIFICADOR ES tipo_estructurado

    IDENTIFICADOR  desplazar e ir al estado 38


Estado 20

   11 varios_identificadores: IDENTIFICADOR .

    $default  reduce usando la regla 11 (varios_identificadores)


Estado 21

    5 varias_librerias: varias_librerias libreria .

    $default  reduce usando la regla 5 (varias_librerias)


Estado 22

   10 varios_identificadores: varios_identificadores . ',' IDENTIFICADOR
   24 declaracion_objeto: varios_identificadores . ':' especificacion_tipo ';'

    ','  desplazar e ir al estado 39
    ':'  desplazar e ir al estado 40


Estado 23

   14 codigo_libreria: varias_librerias varias_declaraciones .
   16 varias_declaraciones: varias_declaraciones . declaracion

    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    $default  reduce usando la regla 14 (codigo_libreria)

    varios_identificadores   ir al estado 22
    declaracion              ir al estado 41
    declaracion_objeto       ir al estado 26
    declaracion_tipo         ir al estado 27
    declaracion_subprograma  ir al estado 28


Estado 24

   15 codigo_libreria: varias_librerias exportaciones . varias_declaraciones

    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores   ir al estado 22
    varias_declaraciones     ir al estado 42
    declaracion              ir al estado 25
    declaracion_objeto       ir al estado 26
    declaracion_tipo         ir al estado 27
    declaracion_subprograma  ir al estado 28


Estado 25

   17 varias_declaraciones: declaracion .

    $default  reduce usando la regla 17 (varias_declaraciones)


Estado 26

   21 declaracion: declaracion_objeto .

    $default  reduce usando la regla 21 (declaracion)


Estado 27

   22 declaracion: declaracion_tipo .

    $default  reduce usando la regla 22 (declaracion)


Estado 28

   23 declaracion: declaracion_subprograma .

    $default  reduce usando la regla 23 (declaracion)


Estado 29

   16 varias_declaraciones: varias_declaraciones . declaracion
   99 cero_o_mas_declaraciones: varias_declaraciones . declaracion

    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores   ir al estado 22
    declaracion              ir al estado 43
    declaracion_objeto       ir al estado 26
    declaracion_tipo         ir al estado 27
    declaracion_subprograma  ir al estado 28


Estado 30

    4 codigo_programa: varias_librerias cuerpo_subprograma .

    $default  reduce usando la regla 4 (codigo_programa)


Estado 31

   98 cuerpo_subprograma: cero_o_mas_declaraciones . PRINCIPIO varias_instrucciones FIN

    PRINCIPIO  desplazar e ir al estado 44


Estado 32

    8 libreria: DE LIBRERIA . nombre IMPORTAR varios_identificadores ';'

    $default  reduce usando la regla 12 (nombre)

    nombre  ir al estado 45


Estado 33

   20 varios_nombres: nombre .

    $default  reduce usando la regla 20 (varios_nombres)


Estado 34

   18 exportaciones: EXPORTAR varios_nombres . ';'
   19 varios_nombres: varios_nombres . ',' nombre

    ';'  desplazar e ir al estado 46
    ','  desplazar e ir al estado 47


Estado 35

    7 libreria: IMPORTAR LIBRERIA . nombre ';'
    9         | IMPORTAR LIBRERIA . nombre COMO IDENTIFICADOR ';'

    $default  reduce usando la regla 12 (nombre)

    nombre  ir al estado 48


Estado 36

   85 cabecera_subprograma: IDENTIFICADOR . cero_uno_parametrizacion cero_uno_tipoResultado

    '('  desplazar e ir al estado 49

    $default  reduce usando la regla 87 (cero_uno_parametrizacion)

    cero_uno_parametrizacion  ir al estado 50
    parametrizacion           ir al estado 51


Estado 37

   84 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma . cuerpo_subprograma SUBPROGRAMA

    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    $default  reduce usando la regla 100 (cero_o_mas_declaraciones)

    varios_identificadores    ir al estado 22
    varias_declaraciones      ir al estado 29
    declaracion               ir al estado 25
    declaracion_objeto        ir al estado 26
    declaracion_tipo          ir al estado 27
    declaracion_subprograma   ir al estado 28
    cuerpo_subprograma        ir al estado 52
    cero_o_mas_declaraciones  ir al estado 31


Estado 38

   27 declaracion_tipo: TIPO IDENTIFICADOR . ES tipo_no_estructurado ';'
   28                 | TIPO IDENTIFICADOR . ES tipo_estructurado

    ES  desplazar e ir al estado 53


Estado 39

   10 varios_identificadores: varios_identificadores ',' . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 54


Estado 40

   24 declaracion_objeto: varios_identificadores ':' . especificacion_tipo ';'

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    SIGNO        desplazar e ir al estado 57

    ';'       reduce usando la regla 12 (nombre)
    $default  reduce usando la regla 34 (cero_o_uno_signo)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 59
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64


Estado 41

   16 varias_declaraciones: varias_declaraciones declaracion .

    $default  reduce usando la regla 16 (varias_declaraciones)


Estado 42

   15 codigo_libreria: varias_librerias exportaciones varias_declaraciones .
   16 varias_declaraciones: varias_declaraciones . declaracion

    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    $default  reduce usando la regla 15 (codigo_libreria)

    varios_identificadores   ir al estado 22
    declaracion              ir al estado 41
    declaracion_objeto       ir al estado 26
    declaracion_tipo         ir al estado 27
    declaracion_subprograma  ir al estado 28


Estado 43

   16 varias_declaraciones: varias_declaraciones declaracion .
   99 cero_o_mas_declaraciones: varias_declaraciones declaracion .

    PRINCIPIO  reduce usando la regla 99 (cero_o_mas_declaraciones)
    $default   reduce usando la regla 16 (varias_declaraciones)


Estado 44

   98 cuerpo_subprograma: cero_o_mas_declaraciones PRINCIPIO . varias_instrucciones FIN

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    $default  reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    varias_instrucciones               ir al estado 72
    instruccion                        ir al estado 73
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 45

    8 libreria: DE LIBRERIA nombre . IMPORTAR varios_identificadores ';'

    IMPORTAR  desplazar e ir al estado 80


Estado 46

   18 exportaciones: EXPORTAR varios_nombres ';' .

    $default  reduce usando la regla 18 (exportaciones)


Estado 47

   19 varios_nombres: varios_nombres ',' . nombre

    $default  reduce usando la regla 12 (nombre)

    nombre  ir al estado 81


Estado 48

    7 libreria: IMPORTAR LIBRERIA nombre . ';'
    9         | IMPORTAR LIBRERIA nombre . COMO IDENTIFICADOR ';'

    COMO  desplazar e ir al estado 82
    ';'   desplazar e ir al estado 83


Estado 49

   90 parametrizacion: '(' . varias_declaraciones_parametros declaracion_parametros ')'

    $default  reduce usando la regla 94 (varias_declaraciones_parametros)

    varias_declaraciones_parametros  ir al estado 84


Estado 50

   85 cabecera_subprograma: IDENTIFICADOR cero_uno_parametrizacion . cero_uno_tipoResultado

    DEVOLVER  desplazar e ir al estado 85

    $default  reduce usando la regla 89 (cero_uno_tipoResultado)

    cero_uno_tipoResultado  ir al estado 86
    tipo_resultado          ir al estado 87


Estado 51

   86 cero_uno_parametrizacion: parametrizacion .

    $default  reduce usando la regla 86 (cero_uno_parametrizacion)


Estado 52

   84 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma . SUBPROGRAMA

    SUBPROGRAMA  desplazar e ir al estado 88


Estado 53

   27 declaracion_tipo: TIPO IDENTIFICADOR ES . tipo_no_estructurado ';'
   28                 | TIPO IDENTIFICADOR ES . tipo_estructurado

    CLASE        desplazar e ir al estado 89
    DICCIONARIO  desplazar e ir al estado 55
    ENUMERACION  desplazar e ir al estado 90
    LISTA        desplazar e ir al estado 56
    REGISTRO     desplazar e ir al estado 91
    SIGNO        desplazar e ir al estado 57

    $default  reduce usando la regla 34 (cero_o_uno_signo)

    tipo_no_estructurado  ir al estado 92
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64
    tipo_estructurado     ir al estado 93
    tipo_registro         ir al estado 94
    tipo_enumerado        ir al estado 95
    clase                 ir al estado 96


Estado 54

   10 varios_identificadores: varios_identificadores ',' IDENTIFICADOR .

    $default  reduce usando la regla 10 (varios_identificadores)


Estado 55

   45 tipo_diccionario: DICCIONARIO . DE especificacion_tipo

    DE  desplazar e ir al estado 97


Estado 56

   44 tipo_tabla: LISTA . DE especificacion_tipo

    DE  desplazar e ir al estado 98


Estado 57

   33 cero_o_uno_signo: SIGNO .

    $default  reduce usando la regla 33 (cero_o_uno_signo)


Estado 58

   25 especificacion_tipo: nombre .

    $default  reduce usando la regla 25 (especificacion_tipo)


Estado 59

   24 declaracion_objeto: varios_identificadores ':' especificacion_tipo . ';'

    ';'  desplazar e ir al estado 99


Estado 60

   26 especificacion_tipo: tipo_no_estructurado .

    $default  reduce usando la regla 26 (especificacion_tipo)


Estado 61

   29 tipo_no_estructurado: tipo_escalar .

    $default  reduce usando la regla 29 (tipo_no_estructurado)


Estado 62

   32 tipo_escalar: cero_o_uno_signo . tipo_basico cero_o_uno_longitud cero_o_uno_rango

    BOOLEANO  desplazar e ir al estado 100
    CARACTER  desplazar e ir al estado 101
    ENTERO    desplazar e ir al estado 102
    REAL      desplazar e ir al estado 103

    tipo_basico  ir al estado 104


Estado 63

   30 tipo_no_estructurado: tipo_tabla .

    $default  reduce usando la regla 30 (tipo_no_estructurado)


Estado 64

   31 tipo_no_estructurado: tipo_diccionario .

    $default  reduce usando la regla 31 (tipo_no_estructurado)


Estado 65

  109 instruccion_devolver: DEVOLVER . ';'

    ';'  desplazar e ir al estado 105


Estado 66

  117 instruccion_lanzamiento_excepcion: LANZA . nombre ';'

    $default  reduce usando la regla 12 (nombre)

    nombre  ir al estado 106


Estado 67

  118 instruccion_captura_excepcion: PRUEBA . varias_instrucciones clausulas FIN PRUEBA

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    $default  reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    varias_instrucciones               ir al estado 107
    instruccion                        ir al estado 73
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 68

  113 instruccion_interrupcion: SALIR . cero_o_uno_de_identificador cero_o_uno_cuando ';'

    DE  desplazar e ir al estado 108

    $default  reduce usando la regla 116 (cero_o_uno_de_identificador)

    cero_o_uno_de_identificador  ir al estado 109


Estado 69

  112 instruccion_interrupcion: SIGUIENTE . cero_o_uno_cuando ';'

    $default  reduce usando la regla 114 (cero_o_uno_cuando)

    cero_o_uno_cuando  ir al estado 110


Estado 70

  108 instruccion: ';' .

    $default  reduce usando la regla 108 (instruccion)


Estado 71

  111 llamada_subprograma: nombre . '(' ')'

    '('  desplazar e ir al estado 111


Estado 72

   98 cuerpo_subprograma: cero_o_mas_declaraciones PRINCIPIO varias_instrucciones . FIN
  101 varias_instrucciones: varias_instrucciones . instruccion

    DEVOLVER   desplazar e ir al estado 65
    FIN        desplazar e ir al estado 112
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    $default  reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 73

  102 varias_instrucciones: instruccion .

    $default  reduce usando la regla 102 (varias_instrucciones)


Estado 74

  103 instruccion: instruccion_devolver .

    $default  reduce usando la regla 103 (instruccion)


Estado 75

  104 instruccion: instruccion_llamada .

    $default  reduce usando la regla 104 (instruccion)


Estado 76

  110 instruccion_llamada: llamada_subprograma . ';'

    ';'  desplazar e ir al estado 114


Estado 77

  105 instruccion: instruccion_interrupcion .

    $default  reduce usando la regla 105 (instruccion)


Estado 78

  106 instruccion: instruccion_lanzamiento_excepcion .

    $default  reduce usando la regla 106 (instruccion)


Estado 79

  107 instruccion: instruccion_captura_excepcion .

    $default  reduce usando la regla 107 (instruccion)


Estado 80

    8 libreria: DE LIBRERIA nombre IMPORTAR . varios_identificadores ';'

    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores  ir al estado 115


Estado 81

   19 varios_nombres: varios_nombres ',' nombre .

    $default  reduce usando la regla 19 (varios_nombres)


Estado 82

    9 libreria: IMPORTAR LIBRERIA nombre COMO . IDENTIFICADOR ';'

    IDENTIFICADOR  desplazar e ir al estado 116


Estado 83

    7 libreria: IMPORTAR LIBRERIA nombre ';' .

    $default  reduce usando la regla 7 (libreria)


Estado 84

   90 parametrizacion: '(' varias_declaraciones_parametros . declaracion_parametros ')'
   93 varias_declaraciones_parametros: varias_declaraciones_parametros . declaracion_parametros ';'

    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores  ir al estado 117
    declaracion_parametros  ir al estado 118


Estado 85

   97 tipo_resultado: DEVOLVER . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    SIGNO        desplazar e ir al estado 57

    BOOLEANO  reduce usando la regla 34 (cero_o_uno_signo)
    CARACTER  reduce usando la regla 34 (cero_o_uno_signo)
    ENTERO    reduce usando la regla 34 (cero_o_uno_signo)
    REAL      reduce usando la regla 34 (cero_o_uno_signo)
    $default  reduce usando la regla 12 (nombre)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 119
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64


Estado 86

   85 cabecera_subprograma: IDENTIFICADOR cero_uno_parametrizacion cero_uno_tipoResultado .

    $default  reduce usando la regla 85 (cabecera_subprograma)


Estado 87

   88 cero_uno_tipoResultado: tipo_resultado .

    $default  reduce usando la regla 88 (cero_uno_tipoResultado)


Estado 88

   84 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma SUBPROGRAMA .

    $default  reduce usando la regla 84 (declaracion_subprograma)


Estado 89

   59 clase: CLASE . cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN CLASE

    ULTIMA  desplazar e ir al estado 120

    $default  reduce usando la regla 61 (cero_uno_ultima)

    cero_uno_ultima  ir al estado 121


Estado 90

   53 tipo_enumerado: ENUMERACION . varios_elemento_enumeracion FIN ENUMERACION
   54               | ENUMERACION . DE tipo_escalar varios_elemento_enumeracion FIN ENUMERACION

    DE             desplazar e ir al estado 122
    IDENTIFICADOR  desplazar e ir al estado 123

    varios_elemento_enumeracion  ir al estado 124
    elemento_enumeracion         ir al estado 125


Estado 91

   49 tipo_registro: REGISTRO . varios_campos FIN REGISTRO

    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores  ir al estado 126
    varios_campos           ir al estado 127
    campo                   ir al estado 128


Estado 92

   27 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado . ';'

    ';'  desplazar e ir al estado 129


Estado 93

   28 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_estructurado .

    $default  reduce usando la regla 28 (declaracion_tipo)


Estado 94

   46 tipo_estructurado: tipo_registro .

    $default  reduce usando la regla 46 (tipo_estructurado)


Estado 95

   47 tipo_estructurado: tipo_enumerado .

    $default  reduce usando la regla 47 (tipo_estructurado)


Estado 96

   48 tipo_estructurado: clase .

    $default  reduce usando la regla 48 (tipo_estructurado)


Estado 97

   45 tipo_diccionario: DICCIONARIO DE . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    SIGNO        desplazar e ir al estado 57

    BOOLEANO  reduce usando la regla 34 (cero_o_uno_signo)
    CARACTER  reduce usando la regla 34 (cero_o_uno_signo)
    ENTERO    reduce usando la regla 34 (cero_o_uno_signo)
    REAL      reduce usando la regla 34 (cero_o_uno_signo)
    $default  reduce usando la regla 12 (nombre)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 130
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64


Estado 98

   44 tipo_tabla: LISTA DE . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    SIGNO        desplazar e ir al estado 57

    BOOLEANO  reduce usando la regla 34 (cero_o_uno_signo)
    CARACTER  reduce usando la regla 34 (cero_o_uno_signo)
    ENTERO    reduce usando la regla 34 (cero_o_uno_signo)
    REAL      reduce usando la regla 34 (cero_o_uno_signo)
    $default  reduce usando la regla 12 (nombre)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 131
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64


Estado 99

   24 declaracion_objeto: varios_identificadores ':' especificacion_tipo ';' .

    $default  reduce usando la regla 24 (declaracion_objeto)


Estado 100

   40 tipo_basico: BOOLEANO .

    $default  reduce usando la regla 40 (tipo_basico)


Estado 101

   41 tipo_basico: CARACTER .

    $default  reduce usando la regla 41 (tipo_basico)


Estado 102

   42 tipo_basico: ENTERO .

    $default  reduce usando la regla 42 (tipo_basico)


Estado 103

   43 tipo_basico: REAL .

    $default  reduce usando la regla 43 (tipo_basico)


Estado 104

   32 tipo_escalar: cero_o_uno_signo tipo_basico . cero_o_uno_longitud cero_o_uno_rango

    CORTO  desplazar e ir al estado 132
    LARGO  desplazar e ir al estado 133

    $default  reduce usando la regla 36 (cero_o_uno_longitud)

    cero_o_uno_longitud  ir al estado 134
    longitud             ir al estado 135


Estado 105

  109 instruccion_devolver: DEVOLVER ';' .

    $default  reduce usando la regla 109 (instruccion_devolver)


Estado 106

  117 instruccion_lanzamiento_excepcion: LANZA nombre . ';'

    ';'  desplazar e ir al estado 136


Estado 107

  101 varias_instrucciones: varias_instrucciones . instruccion
  118 instruccion_captura_excepcion: PRUEBA varias_instrucciones . clausulas FIN PRUEBA

    DEVOLVER    desplazar e ir al estado 65
    FINALMENTE  desplazar e ir al estado 137
    LANZA       desplazar e ir al estado 66
    PRUEBA      desplazar e ir al estado 67
    SALIR       desplazar e ir al estado 68
    SIGUIENTE   desplazar e ir al estado 69
    ';'         desplazar e ir al estado 70

    EXCEPCION  reduce usando la regla 124 (varias_clausula_excepcion_especifica)
    $default   reduce usando la regla 12 (nombre)

    nombre                                ir al estado 71
    instruccion                           ir al estado 113
    instruccion_devolver                  ir al estado 74
    instruccion_llamada                   ir al estado 75
    llamada_subprograma                   ir al estado 76
    instruccion_interrupcion              ir al estado 77
    instruccion_lanzamiento_excepcion     ir al estado 78
    instruccion_captura_excepcion         ir al estado 79
    clausulas                             ir al estado 138
    clausulas_excepcion                   ir al estado 139
    varias_clausula_excepcion_especifica  ir al estado 140
    clausula_finalmente                   ir al estado 141


Estado 108

  115 cero_o_uno_de_identificador: DE . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 142


Estado 109

  113 instruccion_interrupcion: SALIR cero_o_uno_de_identificador . cero_o_uno_cuando ';'

    $default  reduce usando la regla 114 (cero_o_uno_cuando)

    cero_o_uno_cuando  ir al estado 143


Estado 110

  112 instruccion_interrupcion: SIGUIENTE cero_o_uno_cuando . ';'

    ';'  desplazar e ir al estado 144


Estado 111

  111 llamada_subprograma: nombre '(' . ')'

    ')'  desplazar e ir al estado 145


Estado 112

   98 cuerpo_subprograma: cero_o_mas_declaraciones PRINCIPIO varias_instrucciones FIN .

    $default  reduce usando la regla 98 (cuerpo_subprograma)


Estado 113

  101 varias_instrucciones: varias_instrucciones instruccion .

    $default  reduce usando la regla 101 (varias_instrucciones)


Estado 114

  110 instruccion_llamada: llamada_subprograma ';' .

    $default  reduce usando la regla 110 (instruccion_llamada)


Estado 115

    8 libreria: DE LIBRERIA nombre IMPORTAR varios_identificadores . ';'
   10 varios_identificadores: varios_identificadores . ',' IDENTIFICADOR

    ';'  desplazar e ir al estado 146
    ','  desplazar e ir al estado 39


Estado 116

    9 libreria: IMPORTAR LIBRERIA nombre COMO IDENTIFICADOR . ';'

    ';'  desplazar e ir al estado 147


Estado 117

   10 varios_identificadores: varios_identificadores . ',' IDENTIFICADOR
   91 declaracion_parametros: varios_identificadores . ':' especificacion_tipo cero_uno_expresion
   92                       | varios_identificadores . ':' modo especificacion_tipo cero_uno_expresion

    ','  desplazar e ir al estado 39
    ':'  desplazar e ir al estado 148


Estado 118

   90 parametrizacion: '(' varias_declaraciones_parametros declaracion_parametros . ')'
   93 varias_declaraciones_parametros: varias_declaraciones_parametros declaracion_parametros . ';'

    ';'  desplazar e ir al estado 149
    ')'  desplazar e ir al estado 150


Estado 119

   97 tipo_resultado: DEVOLVER especificacion_tipo .

    $default  reduce usando la regla 97 (tipo_resultado)


Estado 120

   60 cero_uno_ultima: ULTIMA .

    $default  reduce usando la regla 60 (cero_uno_ultima)


Estado 121

   59 clase: CLASE cero_uno_ultima . cero_uno_superclases varias_declaraciones_componente FIN CLASE

    '('  desplazar e ir al estado 151

    $default  reduce usando la regla 63 (cero_uno_superclases)

    cero_uno_superclases  ir al estado 152
    superclases           ir al estado 153


Estado 122

   54 tipo_enumerado: ENUMERACION DE . tipo_escalar varios_elemento_enumeracion FIN ENUMERACION

    SIGNO  desplazar e ir al estado 57

    $default  reduce usando la regla 34 (cero_o_uno_signo)

    tipo_escalar      ir al estado 154
    cero_o_uno_signo  ir al estado 62


Estado 123

   57 elemento_enumeracion: IDENTIFICADOR . cero_uno_expresion

    $default  reduce usando la regla 58 (cero_uno_expresion)

    cero_uno_expresion  ir al estado 155


Estado 124

   53 tipo_enumerado: ENUMERACION varios_elemento_enumeracion . FIN ENUMERACION
   55 varios_elemento_enumeracion: varios_elemento_enumeracion . ',' elemento_enumeracion

    FIN  desplazar e ir al estado 156
    ','  desplazar e ir al estado 157


Estado 125

   56 varios_elemento_enumeracion: elemento_enumeracion .

    $default  reduce usando la regla 56 (varios_elemento_enumeracion)


Estado 126

   10 varios_identificadores: varios_identificadores . ',' IDENTIFICADOR
   52 campo: varios_identificadores . ':' especificacion_tipo ';'

    ','  desplazar e ir al estado 39
    ':'  desplazar e ir al estado 158


Estado 127

   49 tipo_registro: REGISTRO varios_campos . FIN REGISTRO
   50 varios_campos: varios_campos . campo

    FIN            desplazar e ir al estado 159
    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores  ir al estado 126
    campo                   ir al estado 160


Estado 128

   51 varios_campos: campo .

    $default  reduce usando la regla 51 (varios_campos)


Estado 129

   27 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado ';' .

    $default  reduce usando la regla 27 (declaracion_tipo)


Estado 130

   45 tipo_diccionario: DICCIONARIO DE especificacion_tipo .

    $default  reduce usando la regla 45 (tipo_diccionario)


Estado 131

   44 tipo_tabla: LISTA DE especificacion_tipo .

    $default  reduce usando la regla 44 (tipo_tabla)


Estado 132

   38 longitud: CORTO .

    $default  reduce usando la regla 38 (longitud)


Estado 133

   39 longitud: LARGO .

    $default  reduce usando la regla 39 (longitud)


Estado 134

   32 tipo_escalar: cero_o_uno_signo tipo_basico cero_o_uno_longitud . cero_o_uno_rango

    $default  reduce usando la regla 37 (cero_o_uno_rango)

    cero_o_uno_rango  ir al estado 161


Estado 135

   35 cero_o_uno_longitud: longitud .

    $default  reduce usando la regla 35 (cero_o_uno_longitud)


Estado 136

  117 instruccion_lanzamiento_excepcion: LANZA nombre ';' .

    $default  reduce usando la regla 117 (instruccion_lanzamiento_excepcion)


Estado 137

  127 clausula_finalmente: FINALMENTE . varias_instrucciones

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    $default  reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    varias_instrucciones               ir al estado 162
    instruccion                        ir al estado 73
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 138

  118 instruccion_captura_excepcion: PRUEBA varias_instrucciones clausulas . FIN PRUEBA

    FIN  desplazar e ir al estado 163


Estado 139

  119 clausulas: clausulas_excepcion .
  120          | clausulas_excepcion . clausula_finalmente

    FINALMENTE  desplazar e ir al estado 137

    $default  reduce usando la regla 119 (clausulas)

    clausula_finalmente  ir al estado 164


Estado 140

  122 clausulas_excepcion: varias_clausula_excepcion_especifica . clausula_excepcion_general
  123 varias_clausula_excepcion_especifica: varias_clausula_excepcion_especifica . clausula_excepcion_especifica

    EXCEPCION  desplazar e ir al estado 165

    clausula_excepcion_especifica  ir al estado 166
    clausula_excepcion_general     ir al estado 167


Estado 141

  121 clausulas: clausula_finalmente .

    $default  reduce usando la regla 121 (clausulas)


Estado 142

  115 cero_o_uno_de_identificador: DE IDENTIFICADOR .

    $default  reduce usando la regla 115 (cero_o_uno_de_identificador)


Estado 143

  113 instruccion_interrupcion: SALIR cero_o_uno_de_identificador cero_o_uno_cuando . ';'

    ';'  desplazar e ir al estado 168


Estado 144

  112 instruccion_interrupcion: SIGUIENTE cero_o_uno_cuando ';' .

    $default  reduce usando la regla 112 (instruccion_interrupcion)


Estado 145

  111 llamada_subprograma: nombre '(' ')' .

    $default  reduce usando la regla 111 (llamada_subprograma)


Estado 146

    8 libreria: DE LIBRERIA nombre IMPORTAR varios_identificadores ';' .

    $default  reduce usando la regla 8 (libreria)


Estado 147

    9 libreria: IMPORTAR LIBRERIA nombre COMO IDENTIFICADOR ';' .

    $default  reduce usando la regla 9 (libreria)


Estado 148

   91 declaracion_parametros: varios_identificadores ':' . especificacion_tipo cero_uno_expresion
   92                       | varios_identificadores ':' . modo especificacion_tipo cero_uno_expresion

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    REFERENCIA   desplazar e ir al estado 169
    SIGNO        desplazar e ir al estado 57
    VALOR        desplazar e ir al estado 170

    ';'       reduce usando la regla 12 (nombre)
    ')'       reduce usando la regla 12 (nombre)
    $default  reduce usando la regla 34 (cero_o_uno_signo)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 171
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64
    modo                  ir al estado 172


Estado 149

   93 varias_declaraciones_parametros: varias_declaraciones_parametros declaracion_parametros ';' .

    $default  reduce usando la regla 93 (varias_declaraciones_parametros)


Estado 150

   90 parametrizacion: '(' varias_declaraciones_parametros declaracion_parametros ')' .

    $default  reduce usando la regla 90 (parametrizacion)


Estado 151

   64 superclases: '(' . varios_nombres ')'

    $default  reduce usando la regla 12 (nombre)

    nombre          ir al estado 33
    varios_nombres  ir al estado 173


Estado 152

   59 clase: CLASE cero_uno_ultima cero_uno_superclases . varias_declaraciones_componente FIN CLASE

    ABSTRACTO      desplazar e ir al estado 174
    CONSTRUCTOR    desplazar e ir al estado 175
    DESTRUCTOR     desplazar e ir al estado 176
    ESPECIFICO     desplazar e ir al estado 177
    FINAL          desplazar e ir al estado 178
    GENERICO       desplazar e ir al estado 179
    PRIVADO        desplazar e ir al estado 180
    PROTEGIDO      desplazar e ir al estado 181
    PUBLICO        desplazar e ir al estado 182
    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores           ir al estado 22
    declaracion_objeto               ir al estado 183
    declaracion_tipo                 ir al estado 184
    declaracion_componente           ir al estado 185
    varias_declaraciones_componente  ir al estado 186
    visibilidad                      ir al estado 187
    componente                       ir al estado 188
    varios_modificadores             ir al estado 189
    modificador                      ir al estado 190
    declaracion_subprograma          ir al estado 191


Estado 153

   62 cero_uno_superclases: superclases .

    $default  reduce usando la regla 62 (cero_uno_superclases)


Estado 154

   54 tipo_enumerado: ENUMERACION DE tipo_escalar . varios_elemento_enumeracion FIN ENUMERACION

    IDENTIFICADOR  desplazar e ir al estado 123

    varios_elemento_enumeracion  ir al estado 192
    elemento_enumeracion         ir al estado 125


Estado 155

   57 elemento_enumeracion: IDENTIFICADOR cero_uno_expresion .

    $default  reduce usando la regla 57 (elemento_enumeracion)


Estado 156

   53 tipo_enumerado: ENUMERACION varios_elemento_enumeracion FIN . ENUMERACION

    ENUMERACION  desplazar e ir al estado 193


Estado 157

   55 varios_elemento_enumeracion: varios_elemento_enumeracion ',' . elemento_enumeracion

    IDENTIFICADOR  desplazar e ir al estado 123

    elemento_enumeracion  ir al estado 194


Estado 158

   52 campo: varios_identificadores ':' . especificacion_tipo ';'

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    SIGNO        desplazar e ir al estado 57

    ';'       reduce usando la regla 12 (nombre)
    $default  reduce usando la regla 34 (cero_o_uno_signo)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 195
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64


Estado 159

   49 tipo_registro: REGISTRO varios_campos FIN . REGISTRO

    REGISTRO  desplazar e ir al estado 196


Estado 160

   50 varios_campos: varios_campos campo .

    $default  reduce usando la regla 50 (varios_campos)


Estado 161

   32 tipo_escalar: cero_o_uno_signo tipo_basico cero_o_uno_longitud cero_o_uno_rango .

    $default  reduce usando la regla 32 (tipo_escalar)


Estado 162

  101 varias_instrucciones: varias_instrucciones . instruccion
  127 clausula_finalmente: FINALMENTE varias_instrucciones .

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    FIN       reduce usando la regla 127 (clausula_finalmente)
    $default  reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 163

  118 instruccion_captura_excepcion: PRUEBA varias_instrucciones clausulas FIN . PRUEBA

    PRUEBA  desplazar e ir al estado 197


Estado 164

  120 clausulas: clausulas_excepcion clausula_finalmente .

    $default  reduce usando la regla 120 (clausulas)


Estado 165

  125 clausula_excepcion_especifica: EXCEPCION . '(' nombre ')' varias_instrucciones
  126 clausula_excepcion_general: EXCEPCION . varias_instrucciones

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70
    '('        desplazar e ir al estado 198

    '('  [reduce usando la regla 12 (nombre)]

    nombre                             ir al estado 71
    varias_instrucciones               ir al estado 199
    instruccion                        ir al estado 73
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 166

  123 varias_clausula_excepcion_especifica: varias_clausula_excepcion_especifica clausula_excepcion_especifica .

    $default  reduce usando la regla 123 (varias_clausula_excepcion_especifica)


Estado 167

  122 clausulas_excepcion: varias_clausula_excepcion_especifica clausula_excepcion_general .

    $default  reduce usando la regla 122 (clausulas_excepcion)


Estado 168

  113 instruccion_interrupcion: SALIR cero_o_uno_de_identificador cero_o_uno_cuando ';' .

    $default  reduce usando la regla 113 (instruccion_interrupcion)


Estado 169

   96 modo: REFERENCIA .

    $default  reduce usando la regla 96 (modo)


Estado 170

   95 modo: VALOR .

    $default  reduce usando la regla 95 (modo)


Estado 171

   91 declaracion_parametros: varios_identificadores ':' especificacion_tipo . cero_uno_expresion

    $default  reduce usando la regla 58 (cero_uno_expresion)

    cero_uno_expresion  ir al estado 200


Estado 172

   92 declaracion_parametros: varios_identificadores ':' modo . especificacion_tipo cero_uno_expresion

    DICCIONARIO  desplazar e ir al estado 55
    LISTA        desplazar e ir al estado 56
    SIGNO        desplazar e ir al estado 57

    ';'       reduce usando la regla 12 (nombre)
    ')'       reduce usando la regla 12 (nombre)
    $default  reduce usando la regla 34 (cero_o_uno_signo)

    nombre                ir al estado 58
    especificacion_tipo   ir al estado 201
    tipo_no_estructurado  ir al estado 60
    tipo_escalar          ir al estado 61
    cero_o_uno_signo      ir al estado 62
    tipo_tabla            ir al estado 63
    tipo_diccionario      ir al estado 64


Estado 173

   19 varios_nombres: varios_nombres . ',' nombre
   64 superclases: '(' varios_nombres . ')'

    ','  desplazar e ir al estado 47
    ')'  desplazar e ir al estado 202


Estado 174

   81 modificador: ABSTRACTO .

    $default  reduce usando la regla 81 (modificador)


Estado 175

   78 modificador: CONSTRUCTOR .

    $default  reduce usando la regla 78 (modificador)


Estado 176

   79 modificador: DESTRUCTOR .

    $default  reduce usando la regla 79 (modificador)


Estado 177

   82 modificador: ESPECIFICO .

    $default  reduce usando la regla 82 (modificador)


Estado 178

   83 modificador: FINAL .

    $default  reduce usando la regla 83 (modificador)


Estado 179

   80 modificador: GENERICO .

    $default  reduce usando la regla 80 (modificador)


Estado 180

   71 visibilidad: PRIVADO .

    $default  reduce usando la regla 71 (visibilidad)


Estado 181

   70 visibilidad: PROTEGIDO .

    $default  reduce usando la regla 70 (visibilidad)


Estado 182

   69 visibilidad: PUBLICO .

    $default  reduce usando la regla 69 (visibilidad)


Estado 183

   73 componente: declaracion_objeto .

    $default  reduce usando la regla 73 (componente)


Estado 184

   72 componente: declaracion_tipo .

    $default  reduce usando la regla 72 (componente)


Estado 185

   68 varias_declaraciones_componente: declaracion_componente .

    $default  reduce usando la regla 68 (varias_declaraciones_componente)


Estado 186

   59 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente . FIN CLASE
   67 varias_declaraciones_componente: varias_declaraciones_componente . declaracion_componente

    ABSTRACTO      desplazar e ir al estado 174
    CONSTRUCTOR    desplazar e ir al estado 175
    DESTRUCTOR     desplazar e ir al estado 176
    ESPECIFICO     desplazar e ir al estado 177
    FIN            desplazar e ir al estado 203
    FINAL          desplazar e ir al estado 178
    GENERICO       desplazar e ir al estado 179
    PRIVADO        desplazar e ir al estado 180
    PROTEGIDO      desplazar e ir al estado 181
    PUBLICO        desplazar e ir al estado 182
    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores   ir al estado 22
    declaracion_objeto       ir al estado 183
    declaracion_tipo         ir al estado 184
    declaracion_componente   ir al estado 204
    visibilidad              ir al estado 187
    componente               ir al estado 188
    varios_modificadores     ir al estado 189
    modificador              ir al estado 190
    declaracion_subprograma  ir al estado 191


Estado 187

   66 declaracion_componente: visibilidad . componente

    ABSTRACTO      desplazar e ir al estado 174
    CONSTRUCTOR    desplazar e ir al estado 175
    DESTRUCTOR     desplazar e ir al estado 176
    ESPECIFICO     desplazar e ir al estado 177
    FINAL          desplazar e ir al estado 178
    GENERICO       desplazar e ir al estado 179
    SUBPROGRAMA    desplazar e ir al estado 18
    TIPO           desplazar e ir al estado 19
    IDENTIFICADOR  desplazar e ir al estado 20

    varios_identificadores   ir al estado 22
    declaracion_objeto       ir al estado 183
    declaracion_tipo         ir al estado 184
    componente               ir al estado 205
    varios_modificadores     ir al estado 189
    modificador              ir al estado 190
    declaracion_subprograma  ir al estado 191


Estado 188

   65 declaracion_componente: componente .

    $default  reduce usando la regla 65 (declaracion_componente)


Estado 189

   74 componente: varios_modificadores . declaracion_subprograma
   76 varios_modificadores: varios_modificadores . ',' modificador

    SUBPROGRAMA  desplazar e ir al estado 18
    ','          desplazar e ir al estado 206

    declaracion_subprograma  ir al estado 207


Estado 190

   77 varios_modificadores: modificador .

    $default  reduce usando la regla 77 (varios_modificadores)


Estado 191

   75 componente: declaracion_subprograma .

    $default  reduce usando la regla 75 (componente)


Estado 192

   54 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion . FIN ENUMERACION
   55 varios_elemento_enumeracion: varios_elemento_enumeracion . ',' elemento_enumeracion

    FIN  desplazar e ir al estado 208
    ','  desplazar e ir al estado 157


Estado 193

   53 tipo_enumerado: ENUMERACION varios_elemento_enumeracion FIN ENUMERACION .

    $default  reduce usando la regla 53 (tipo_enumerado)


Estado 194

   55 varios_elemento_enumeracion: varios_elemento_enumeracion ',' elemento_enumeracion .

    $default  reduce usando la regla 55 (varios_elemento_enumeracion)


Estado 195

   52 campo: varios_identificadores ':' especificacion_tipo . ';'

    ';'  desplazar e ir al estado 209


Estado 196

   49 tipo_registro: REGISTRO varios_campos FIN REGISTRO .

    $default  reduce usando la regla 49 (tipo_registro)


Estado 197

  118 instruccion_captura_excepcion: PRUEBA varias_instrucciones clausulas FIN PRUEBA .

    $default  reduce usando la regla 118 (instruccion_captura_excepcion)


Estado 198

  125 clausula_excepcion_especifica: EXCEPCION '(' . nombre ')' varias_instrucciones

    $default  reduce usando la regla 12 (nombre)

    nombre  ir al estado 210


Estado 199

  101 varias_instrucciones: varias_instrucciones . instruccion
  126 clausula_excepcion_general: EXCEPCION varias_instrucciones .

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    '('       reduce usando la regla 12 (nombre)
    $default  reduce usando la regla 126 (clausula_excepcion_general)

    nombre                             ir al estado 71
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 200

   91 declaracion_parametros: varios_identificadores ':' especificacion_tipo cero_uno_expresion .

    $default  reduce usando la regla 91 (declaracion_parametros)


Estado 201

   92 declaracion_parametros: varios_identificadores ':' modo especificacion_tipo . cero_uno_expresion

    $default  reduce usando la regla 58 (cero_uno_expresion)

    cero_uno_expresion  ir al estado 211


Estado 202

   64 superclases: '(' varios_nombres ')' .

    $default  reduce usando la regla 64 (superclases)


Estado 203

   59 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN . CLASE

    CLASE  desplazar e ir al estado 212


Estado 204

   67 varias_declaraciones_componente: varias_declaraciones_componente declaracion_componente .

    $default  reduce usando la regla 67 (varias_declaraciones_componente)


Estado 205

   66 declaracion_componente: visibilidad componente .

    $default  reduce usando la regla 66 (declaracion_componente)


Estado 206

   76 varios_modificadores: varios_modificadores ',' . modificador

    ABSTRACTO    desplazar e ir al estado 174
    CONSTRUCTOR  desplazar e ir al estado 175
    DESTRUCTOR   desplazar e ir al estado 176
    ESPECIFICO   desplazar e ir al estado 177
    FINAL        desplazar e ir al estado 178
    GENERICO     desplazar e ir al estado 179

    modificador  ir al estado 213


Estado 207

   74 componente: varios_modificadores declaracion_subprograma .

    $default  reduce usando la regla 74 (componente)


Estado 208

   54 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion FIN . ENUMERACION

    ENUMERACION  desplazar e ir al estado 214


Estado 209

   52 campo: varios_identificadores ':' especificacion_tipo ';' .

    $default  reduce usando la regla 52 (campo)


Estado 210

  125 clausula_excepcion_especifica: EXCEPCION '(' nombre . ')' varias_instrucciones

    ')'  desplazar e ir al estado 215


Estado 211

   92 declaracion_parametros: varios_identificadores ':' modo especificacion_tipo cero_uno_expresion .

    $default  reduce usando la regla 92 (declaracion_parametros)


Estado 212

   59 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN CLASE .

    $default  reduce usando la regla 59 (clase)


Estado 213

   76 varios_modificadores: varios_modificadores ',' modificador .

    $default  reduce usando la regla 76 (varios_modificadores)


Estado 214

   54 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion FIN ENUMERACION .

    $default  reduce usando la regla 54 (tipo_enumerado)


Estado 215

  125 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' . varias_instrucciones

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    $default  reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    varias_instrucciones               ir al estado 216
    instruccion                        ir al estado 73
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79


Estado 216

  101 varias_instrucciones: varias_instrucciones . instruccion
  125 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' varias_instrucciones .

    DEVOLVER   desplazar e ir al estado 65
    LANZA      desplazar e ir al estado 66
    PRUEBA     desplazar e ir al estado 67
    SALIR      desplazar e ir al estado 68
    SIGUIENTE  desplazar e ir al estado 69
    ';'        desplazar e ir al estado 70

    EXCEPCION  reduce usando la regla 125 (clausula_excepcion_especifica)
    $default   reduce usando la regla 12 (nombre)

    nombre                             ir al estado 71
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 74
    instruccion_llamada                ir al estado 75
    llamada_subprograma                ir al estado 76
    instruccion_interrupcion           ir al estado 77
    instruccion_lanzamiento_excepcion  ir al estado 78
    instruccion_captura_excepcion      ir al estado 79
