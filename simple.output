No terminales inútiles en la gramática

   varios_identificadores2
   longitud
   tipo_basico
   rango
   instruccion_asignacion
   op_asignacion
   definicion_parametro
   cero_uno_identificador
   instruccion_si
   cero_mas_instrucciones
   instruccion_casos
   caso
   entradas
   varias_entradas
   entrada
   cero_mas_expresiones1
   instruccion_bucle
   cero_mas_identificador1
   clausula_iteracion
   cero_mas_especificacion_tipo
   cero_o_uno_descendente
   cuando
   expresion_potencia
   expresion_posfija
   operador_posfijo
   expresion_unaria
   primario
   literal
   objeto
   varias_expresiones
   varias_ctc_cadena
   enumeraciones
   varias_clausulas_iteracion
   varias_clave_valor
   varias_campo_valor
   expresion_condicional
   clave_valor
   campo_valor
   expresion
   operadorOR
   operadorAND
   operadorNEG
   operadorASIG
   operadorDES
   operadorSR
   operadorMDM
   operadorPOT
   operadorINCDEC
   operadorUN


Terminales no usados en la gramática

   BOOLEANO
   BUCLE
   CARACTER
   CASOS
   CONSTANTE
   CORTO
   CUANDO
   DESCENDENTE
   EN
   ENTERO
   ENTONCES
   FALSO
   LARGO
   MIENTRAS
   OBJETO
   OTRO
   PARA
   PROGRAMA
   RANGO
   REAL
   REPETIR
   SI
   SINO
   TABLA
   VERDADERO
   CTC_CARACTER
   CTC_CADENA
   CTC_ENTERA
   CTC_REAL
   DOS_PTOS
   FLECHA
   INC
   DEC
   DESPI
   DESPD
   LEQ
   CEQ
   NEQ
   AND
   OR
   ASIG_SUMA
   ASIG_RESTA
   ASIG_MULT
   ASIG_DIV
   ASIG_RESTO
   ASIG_POT
   ASIG_DESPI
   ASIG_DESP
   '^'
   '-'
   '.'
   '['
   ']'
   '{'
   '}'
   '~'
   '<'
   '>'
   '='
   '+'
   '*'
   '/'
   '\\'


Reglas inútiles en la gramática

  126 varios_identificadores2: %empty
  127                        | varios_identificadores2 IDENTIFICADOR CUATRO_PUNTOS

  128 declaracion_objeto: varios_identificadores ':' CONSTANTE especificacion_tipo ASIGNACION expresion ';'
  129                   | varios_identificadores ':' especificacion_tipo ASIGNACION expresion

  130 cero_o_uno_rango: RANGO rango

  131 longitud: CORTO
  132         | LARGO

  133 tipo_basico: BOOLEANO
  134            | CARACTER
  135            | ENTERO
  136            | REAL

  137 rango: expresion DOS_PTOS expresion
  138      | expresion DOS_PTOS expresion DOS_PTOS expresion

  139 tipo_tabla: TABLA '(' expresion DOS_PTOS expresion ')' DE especificacion_tipo

  140 cero_o_uno_elemento_enumeracion: ASIGNACION expresion

  141 cero_uno_expresion: ASIGNACION expresion

  142 instruccion: instruccion_asignacion
  143            | instruccion_si
  144            | instruccion_casos
  145            | instruccion_bucle

  146 instruccion_asignacion: objeto op_asignacion expresion ';'

  147 op_asignacion: ASIGNACION
  148              | ASIG_SUMA
  149              | ASIG_RESTA
  150              | ASIG_MULT
  151              | ASIG_DIV
  152              | ASIG_RESTO
  153              | ASIG_POT
  154              | ASIG_DESPI
  155              | ':'

  156 cero_uno_expr: expresion

  157 varias_definicion_parametro: definicion_parametro
  158                            | varias_definicion_parametro definicion_parametro

  159 definicion_parametro: cero_uno_identificador expresion

  160 cero_uno_identificador: %empty
  161                       | IDENTIFICADOR ASIGNACION

  162 instruccion_si: SI expresion ENTONCES varias_instrucciones cero_mas_instrucciones FIN SI

  163 cero_mas_instrucciones: %empty
  164                       | SINO varias_instrucciones

  165 instruccion_casos: CASOS expresion ES caso FIN CASOS

  166 caso: CUANDO entradas FLECHA varias_instrucciones

  167 entradas: varias_entradas entrada

  168 varias_entradas: entradas ':'
  169                | varias_entradas entradas ':'

  170 entrada: expresion cero_mas_expresiones1
  171        | OTRO

  172 cero_mas_expresiones1: %empty
  173                      | DOS_PTOS expresion

  174 instruccion_bucle: cero_mas_identificador1 clausula_iteracion varias_instrucciones FIN BUCLE

  175 cero_mas_identificador1: %empty
  176                        | IDENTIFICADOR ':'

  177 clausula_iteracion: PARA IDENTIFICADOR cero_mas_especificacion_tipo EN expresion
  178                   | REPETIR IDENTIFICADOR cero_mas_especificacion_tipo EN rango cero_o_uno_descendente
  179                   | MIENTRAS expresion

  180 cero_mas_especificacion_tipo: %empty
  181                             | ':' especificacion_tipo

  182 cero_o_uno_descendente: DESCENDENTE

  183 cuando: CUANDO expresion

  184 cero_o_uno_cuando: cuando

  185 expresion_potencia: expresion_posfija
  186                   | expresion_posfija '^' expresion_potencia

  187 expresion_posfija: expresion_unaria
  188                  | expresion_unaria operador_posfijo

  189 operador_posfijo: INC
  190                 | DEC

  191 expresion_unaria: primario
  192                 | '-' primario

  193 primario: literal
  194         | objeto
  195         | llamada_subprograma
  196         | OBJETO llamada_subprograma
  197         | enumeraciones
  198         | '(' expresion ')'

  199 literal: VERDADERO
  200        | FALSO
  201        | CTC_ENTERA
  202        | CTC_REAL
  203        | CTC_CARACTER
  204        | CTC_CADENA

  205 objeto: nombre
  206       | objeto '.' IDENTIFICADOR
  207       | objeto '[' varias_expresiones ']'
  208       | objeto '{' varias_ctc_cadena '}'

  209 varias_expresiones: expresion
  210                   | varias_expresiones expresion

  211 varias_ctc_cadena: CTC_CADENA
  212                  | varias_ctc_cadena CTC_CADENA

  213 enumeraciones: '[' expresion_condicional varias_clausulas_iteracion ']'
  214              | '[' varias_expresiones ']'
  215              | '{' varias_clave_valor '}'
  216              | '{' varias_campo_valor '}'

  217 varias_clausulas_iteracion: varias_clausulas_iteracion
  218                           | varias_clausulas_iteracion clausula_iteracion

  219 varias_clave_valor: clave_valor
  220                   | varias_clave_valor clave_valor

  221 varias_campo_valor: campo_valor
  222                   | varias_campo_valor campo_valor

  223 expresion_condicional: expresion
  224                      | SI expresion ENTONCES expresion
  225                      | SI expresion ENTONCES expresion SINO varias_expresiones

  226 clave_valor: CTC_CADENA FLECHA expresion

  227 campo_valor: IDENTIFICADOR FLECHA expresion

  228 expresion: operadorOR

  229 operadorOR: operadorOR OR operadorAND
  230           | operadorAND

  231 operadorAND: operadorAND AND operadorNEG
  232            | operadorNEG

  233 operadorNEG: '~' operadorASIG
  234            | operadorASIG

  235 operadorASIG: '<' operadorDES
  236             | '>' operadorDES
  237             | LEQ operadorDES
  238             | FLECHA operadorDES
  239             | '=' operadorDES
  240             | NEQ operadorDES
  241             | operadorDES

  242 operadorDES: operadorDES DESPI operadorSR
  243            | operadorDES DESPD operadorSR
  244            | operadorSR

  245 operadorSR: operadorSR '+' operadorMDM
  246           | operadorSR '-' operadorMDM
  247           | operadorMDM

  248 operadorMDM: operadorMDM '*' operadorPOT
  249            | operadorMDM '/' operadorPOT
  250            | operadorMDM '\\' operadorPOT
  251            | operadorPOT

  252 operadorPOT: operadorINCDEC '^' operadorPOT
  253            | operadorINCDEC

  254 operadorINCDEC: INC operadorMDM
  255               | DEC operadorMDM
  256               | operadorMDM

  257 operadorUN: '-' primario
  258           | primario


La regla es inútil debido a los conflictos

   88 varias_declaraciones_parametros: %empty

  120 varias_clausula_excepcion_especifica: %empty


Estado 22 conflictos: 3 desplazamiento/reducción
Estado 24 conflictos: 3 desplazamiento/reducción
Estado 41 conflictos: 1 desplazamiento/reducción
Estado 42 conflictos: 3 desplazamiento/reducción
Estado 47 conflictos: 3 desplazamiento/reducción
Estado 54 conflictos: 1 desplazamiento/reducción
Estado 55 conflictos: 1 desplazamiento/reducción
Estado 107 conflictos: 1 desplazamiento/reducción
Estado 149 conflictos: 6 desplazamiento/reducción
Estado 179 conflictos: 6 desplazamiento/reducción
Estado 180 conflictos: 6 desplazamiento/reducción


Gramática

    0 $accept: programa $end

    1 programa: definicion_programa
    2         | definicion_libreria

    3 definicion_programa: programa IDENTIFICADOR ';' codigo_programa

    4 codigo_programa: varias_librerias cuerpo_subprograma

    5 varias_librerias: libreria
    6                 | varias_librerias libreria

    7 libreria: IMPORTAR LIBRERIA nombre ';'
    8         | DE LIBRERIA nombre IMPORTAR varios_identificadores ';'
    9         | IMPORTAR LIBRERIA nombre COMO IDENTIFICADOR ';'

   10 varios_identificadores: IDENTIFICADOR
   11                       | varios_identificadores IDENTIFICADOR

   12 nombre: IDENTIFICADOR
   13       | nombre CUATRO_PUNTOS IDENTIFICADOR

   14 definicion_libreria: libreria IDENTIFICADOR ';' codigo_libreria

   15 codigo_libreria: varias_librerias varias_declaraciones
   16                | varias_librerias exportaciones varias_declaraciones

   17 varias_declaraciones: %empty
   18                     | declaracion
   19                     | varias_declaraciones declaracion

   20 exportaciones: EXPORTAR varios_nombres ';'

   21 varios_nombres: nombre
   22               | varios_nombres nombre

   23 declaracion: declaracion_objeto
   24            | declaracion_tipo
   25            | declaracion_subprograma

   26 declaracion_objeto: varios_identificadores ':' especificacion_tipo

   27 especificacion_tipo: nombre
   28                    | tipo_no_estructurado

   29 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado ';'
   30                 | TIPO IDENTIFICADOR ES tipo_estructurado

   31 tipo_no_estructurado: tipo_escalar
   32                     | tipo_tabla
   33                     | tipo_diccionario

   34 tipo_escalar: cero_o_uno_signo TIPO_BASICO cero_o_uno_longitud cero_o_uno_rango

   35 cero_o_uno_signo: %empty
   36                 | SIGNO

   37 cero_o_uno_longitud: %empty
   38                    | LONGITUD

   39 cero_o_uno_rango: %empty

   40 tipo_tabla: LISTA DE especificacion_tipo

   41 tipo_diccionario: DICCIONARIO DE especificacion_tipo

   42 tipo_estructurado: tipo_registro
   43                  | tipo_enumerado
   44                  | clase

   45 tipo_registro: REGISTRO varios_campos FIN REGISTRO

   46 varios_campos: campo
   47              | varios_campos campo

   48 campo: varios_identificadores ':' especificacion_tipo ';'
   49      | varios_identificadores ':' especificacion_tipo ASIGNACION cero_uno_expresion ';'

   50 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion FIN ENUMERACION

   51 varios_elemento_enumeracion: elemento_enumeracion
   52                            | varios_elemento_enumeracion elemento_enumeracion

   53 elemento_enumeracion: IDENTIFICADOR cero_o_uno_elemento_enumeracion

   54 cero_o_uno_elemento_enumeracion: %empty

   55 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN CLASE

   56 cero_uno_ultima: %empty
   57                | ULTIMA

   58 cero_uno_superclases: %empty
   59                     | superclases

   60 superclases: '(' nombre ')'

   61 declaracion_componente: componente
   62                       | visibilidad componente

   63 varias_declaraciones_componente: declaracion_componente
   64                                | varias_declaraciones_componente declaracion_componente

   65 visibilidad: PUBLICO
   66            | PROTEGIDO
   67            | PRIVADO

   68 componente: declaracion_tipo
   69           | declaracion_objeto
   70           | varios_modificadores declaracion_subprograma

   71 varios_modificadores: %empty
   72                     | modificador
   73                     | varios_modificadores modificador

   74 modificador: CONSTRUCTOR
   75            | DESTRUCTOR
   76            | GENERICO
   77            | ABSTRACTO
   78            | ESPECIFICO
   79            | FINAL

   80 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma SUBPROGRAMA

   81 cabecera_subprograma: IDENTIFICADOR cero_uno_parametrizacion cero_uno_tipoResultado

   82 cero_uno_parametrizacion: %empty
   83                         | parametrizacion

   84 cero_uno_tipoResultado: %empty
   85                       | tipo_resultado

   86 parametrizacion: '(' varias_declaraciones_parametros declaracion_parametros ')'

   87 declaracion_parametros: varios_identificadores ':' modo especificacion_tipo cero_uno_expresion

   88 varias_declaraciones_parametros: %empty
   89                                | declaracion_parametros ';'
   90                                | varias_declaraciones_parametros declaracion_parametros ';'

   91 cero_uno_expresion: %empty

   92 modo: VALOR
   93     | REFERENCIA

   94 tipo_resultado: DEVOLVER especificacion_tipo

   95 cuerpo_subprograma: varias_declaraciones PRINCIPIO varias_instrucciones FIN

   96 varias_instrucciones: instruccion
   97                     | varias_instrucciones instruccion

   98 instruccion: instruccion_devolver
   99            | instruccion_llamada
  100            | instruccion_interrupcion
  101            | instruccion_lanzamiento_excepcion
  102            | instruccion_captura_excepcion
  103            | ';'

  104 instruccion_devolver: DEVOLVER cero_uno_expr ';'

  105 cero_uno_expr: %empty

  106 instruccion_llamada: llamada_subprograma ';'

  107 llamada_subprograma: nombre '(' varias_definicion_parametro ')'

  108 varias_definicion_parametro: %empty

  109 instruccion_interrupcion: SIGUIENTE cero_o_uno_cuando ';'
  110                         | SALIR cero_o_uno_de_identificador cero_o_uno_cuando ';'

  111 cero_o_uno_cuando: %empty

  112 cero_o_uno_de_identificador: %empty
  113                            | DE IDENTIFICADOR

  114 instruccion_lanzamiento_excepcion: LANZA nombre ';'

  115 instruccion_captura_excepcion: PRUEBA instruccion clausulas FIN PRUEBA

  116 clausulas: clausulas_excepcion
  117          | clausulas_excepcion clausula_finalmente
  118          | clausula_finalmente

  119 clausulas_excepcion: varias_clausula_excepcion_especifica clausula_excepcion_general

  120 varias_clausula_excepcion_especifica: %empty
  121                                     | clausula_excepcion_especifica
  122                                     | varias_clausula_excepcion_especifica clausula_excepcion_especifica

  123 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' varias_instrucciones

  124 clausula_excepcion_general: EXCEPCION varias_instrucciones

  125 clausula_finalmente: FINALMENTE varias_instrucciones


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 60 86 107 123
')' (41) 60 86 107 123
'*' (42)
'+' (43)
'-' (45)
'.' (46)
'/' (47)
':' (58) 26 48 49 87
';' (59) 3 7 8 9 14 20 29 48 49 89 90 103 104 106 109 110 114
'<' (60)
'=' (61)
'>' (62)
'[' (91)
'\\' (92)
']' (93)
'^' (94)
'{' (123)
'}' (125)
'~' (126)
error (256)
ABSTRACTO (258) 77
BOOLEANO (259)
BUCLE (260)
CARACTER (261)
CASOS (262)
CLASE (263) 55
COMO (264) 9
CONSTANTE (265)
CONSTRUCTOR (266) 74
CORTO (267)
CUANDO (268)
DE (269) 8 40 41 50 113
DESCENDENTE (270)
DESTRUCTOR (271) 75
DEVOLVER (272) 94 104
DICCIONARIO (273) 41
EN (274)
ENTERO (275)
ENTONCES (276)
ENUMERACION (277) 50
ES (278) 29 30
ESPECIFICO (279) 78
EXCEPCION (280) 123 124
EXPORTAR (281) 20
FALSO (282)
FIN (283) 45 50 55 95 115
FINAL (284) 79
FINALMENTE (285) 125
GENERICO (286) 76
IMPORTAR (287) 7 8 9
LARGO (288)
LANZA (289) 114
LIBRERIA (290) 7 8 9
LISTA (291) 40
MIENTRAS (292)
OBJETO (293)
OTRO (294)
PARA (295)
PRINCIPIO (296) 95
PRIVADO (297) 67
PROGRAMA (298)
PROTEGIDO (299) 66
PRUEBA (300) 115
PUBLICO (301) 65
RANGO (302)
REAL (303)
REFERENCIA (304) 93
REGISTRO (305) 45
REPETIR (306)
SALIR (307) 110
SI (308)
SIGNO (309) 36
SIGUIENTE (310) 109
SINO (311)
SUBPROGRAMA (312) 80
TABLA (313)
TIPO (314) 29 30
ULTIMA (315) 57
VALOR (316) 92
VERDADERO (317)
CTC_CARACTER (318)
CTC_CADENA (319)
IDENTIFICADOR (320) 3 9 10 11 12 13 14 29 30 53 81 113
CTC_ENTERA (321)
CTC_REAL (322)
DOS_PTOS (323)
CUATRO_PUNTOS (324) 13
ASIGNACION (325) 49
FLECHA (326)
INC (327)
DEC (328)
DESPI (329)
DESPD (330)
LEQ (331)
CEQ (332)
NEQ (333)
AND (334)
OR (335)
ASIG_SUMA (336)
ASIG_RESTA (337)
ASIG_MULT (338)
ASIG_DIV (339)
ASIG_RESTO (340)
ASIG_POT (341)
ASIG_DESPI (342)
ASIG_DESP (343)
LONGITUD (344) 38
TIPO_BASICO (345) 34


No terminales con las reglas donde aparecen

$accept (110)
    en la izquierda: 0
programa (111)
    en la izquierda: 1 2, en la derecha: 0 3
definicion_programa (112)
    en la izquierda: 3, en la derecha: 1
codigo_programa (113)
    en la izquierda: 4, en la derecha: 3
varias_librerias (114)
    en la izquierda: 5 6, en la derecha: 4 6 15 16
libreria (115)
    en la izquierda: 7 8 9, en la derecha: 5 6 14
varios_identificadores (116)
    en la izquierda: 10 11, en la derecha: 8 11 26 48 49 87
nombre (117)
    en la izquierda: 12 13, en la derecha: 7 8 9 13 21 22 27 60 107
    114 123
definicion_libreria (118)
    en la izquierda: 14, en la derecha: 2
codigo_libreria (119)
    en la izquierda: 15 16, en la derecha: 14
varias_declaraciones (120)
    en la izquierda: 17 18 19, en la derecha: 15 16 19 95
exportaciones (121)
    en la izquierda: 20, en la derecha: 16
varios_nombres (122)
    en la izquierda: 21 22, en la derecha: 20 22
declaracion (123)
    en la izquierda: 23 24 25, en la derecha: 18 19
declaracion_objeto (124)
    en la izquierda: 26, en la derecha: 23 69
especificacion_tipo (125)
    en la izquierda: 27 28, en la derecha: 26 40 41 48 49 87 94
declaracion_tipo (126)
    en la izquierda: 29 30, en la derecha: 24 68
tipo_no_estructurado (127)
    en la izquierda: 31 32 33, en la derecha: 28 29
tipo_escalar (128)
    en la izquierda: 34, en la derecha: 31 50
cero_o_uno_signo (129)
    en la izquierda: 35 36, en la derecha: 34
cero_o_uno_longitud (130)
    en la izquierda: 37 38, en la derecha: 34
cero_o_uno_rango (131)
    en la izquierda: 39, en la derecha: 34
tipo_tabla (132)
    en la izquierda: 40, en la derecha: 32
tipo_diccionario (133)
    en la izquierda: 41, en la derecha: 33
tipo_estructurado (134)
    en la izquierda: 42 43 44, en la derecha: 30
tipo_registro (135)
    en la izquierda: 45, en la derecha: 42
varios_campos (136)
    en la izquierda: 46 47, en la derecha: 45 47
campo (137)
    en la izquierda: 48 49, en la derecha: 46 47
tipo_enumerado (138)
    en la izquierda: 50, en la derecha: 43
varios_elemento_enumeracion (139)
    en la izquierda: 51 52, en la derecha: 50 52
elemento_enumeracion (140)
    en la izquierda: 53, en la derecha: 51 52
cero_o_uno_elemento_enumeracion (141)
    en la izquierda: 54, en la derecha: 53
clase (142)
    en la izquierda: 55, en la derecha: 44
cero_uno_ultima (143)
    en la izquierda: 56 57, en la derecha: 55
cero_uno_superclases (144)
    en la izquierda: 58 59, en la derecha: 55
superclases (145)
    en la izquierda: 60, en la derecha: 59
declaracion_componente (146)
    en la izquierda: 61 62, en la derecha: 63 64
varias_declaraciones_componente (147)
    en la izquierda: 63 64, en la derecha: 55 64
visibilidad (148)
    en la izquierda: 65 66 67, en la derecha: 62
componente (149)
    en la izquierda: 68 69 70, en la derecha: 61 62
varios_modificadores (150)
    en la izquierda: 71 72 73, en la derecha: 70 73
modificador (151)
    en la izquierda: 74 75 76 77 78 79, en la derecha: 72 73
declaracion_subprograma (152)
    en la izquierda: 80, en la derecha: 25 70
cabecera_subprograma (153)
    en la izquierda: 81, en la derecha: 80
cero_uno_parametrizacion (154)
    en la izquierda: 82 83, en la derecha: 81
cero_uno_tipoResultado (155)
    en la izquierda: 84 85, en la derecha: 81
parametrizacion (156)
    en la izquierda: 86, en la derecha: 83
declaracion_parametros (157)
    en la izquierda: 87, en la derecha: 86 89 90
varias_declaraciones_parametros (158)
    en la izquierda: 88 89 90, en la derecha: 86 90
cero_uno_expresion (159)
    en la izquierda: 91, en la derecha: 49 87
modo (160)
    en la izquierda: 92 93, en la derecha: 87
tipo_resultado (161)
    en la izquierda: 94, en la derecha: 85
cuerpo_subprograma (162)
    en la izquierda: 95, en la derecha: 4 80
varias_instrucciones (163)
    en la izquierda: 96 97, en la derecha: 95 97 123 124 125
instruccion (164)
    en la izquierda: 98 99 100 101 102 103, en la derecha: 96 97 115
instruccion_devolver (165)
    en la izquierda: 104, en la derecha: 98
cero_uno_expr (166)
    en la izquierda: 105, en la derecha: 104
instruccion_llamada (167)
    en la izquierda: 106, en la derecha: 99
llamada_subprograma (168)
    en la izquierda: 107, en la derecha: 106
varias_definicion_parametro (169)
    en la izquierda: 108, en la derecha: 107
instruccion_interrupcion (170)
    en la izquierda: 109 110, en la derecha: 100
cero_o_uno_cuando (171)
    en la izquierda: 111, en la derecha: 109 110
cero_o_uno_de_identificador (172)
    en la izquierda: 112 113, en la derecha: 110
instruccion_lanzamiento_excepcion (173)
    en la izquierda: 114, en la derecha: 101
instruccion_captura_excepcion (174)
    en la izquierda: 115, en la derecha: 102
clausulas (175)
    en la izquierda: 116 117 118, en la derecha: 115
clausulas_excepcion (176)
    en la izquierda: 119, en la derecha: 116 117
varias_clausula_excepcion_especifica (177)
    en la izquierda: 120 121 122, en la derecha: 119 122
clausula_excepcion_especifica (178)
    en la izquierda: 123, en la derecha: 121 122
clausula_excepcion_general (179)
    en la izquierda: 124, en la derecha: 119
clausula_finalmente (180)
    en la izquierda: 125, en la derecha: 117 118


Estado 0

    0 $accept: . programa $end

    DE        desplazar e ir al estado 1
    IMPORTAR  desplazar e ir al estado 2

    programa             ir al estado 3
    definicion_programa  ir al estado 4
    libreria             ir al estado 5
    definicion_libreria  ir al estado 6


Estado 1

    8 libreria: DE . LIBRERIA nombre IMPORTAR varios_identificadores ';'

    LIBRERIA  desplazar e ir al estado 7


Estado 2

    7 libreria: IMPORTAR . LIBRERIA nombre ';'
    9         | IMPORTAR . LIBRERIA nombre COMO IDENTIFICADOR ';'

    LIBRERIA  desplazar e ir al estado 8


Estado 3

    0 $accept: programa . $end
    3 definicion_programa: programa . IDENTIFICADOR ';' codigo_programa

    $end           desplazar e ir al estado 9
    IDENTIFICADOR  desplazar e ir al estado 10


Estado 4

    1 programa: definicion_programa .

    $default  reduce usando la regla 1 (programa)


Estado 5

   14 definicion_libreria: libreria . IDENTIFICADOR ';' codigo_libreria

    IDENTIFICADOR  desplazar e ir al estado 11


Estado 6

    2 programa: definicion_libreria .

    $default  reduce usando la regla 2 (programa)


Estado 7

    8 libreria: DE LIBRERIA . nombre IMPORTAR varios_identificadores ';'

    IDENTIFICADOR  desplazar e ir al estado 12

    nombre  ir al estado 13


Estado 8

    7 libreria: IMPORTAR LIBRERIA . nombre ';'
    9         | IMPORTAR LIBRERIA . nombre COMO IDENTIFICADOR ';'

    IDENTIFICADOR  desplazar e ir al estado 12

    nombre  ir al estado 14


Estado 9

    0 $accept: programa $end .

    $default  aceptar


Estado 10

    3 definicion_programa: programa IDENTIFICADOR . ';' codigo_programa

    ';'  desplazar e ir al estado 15


Estado 11

   14 definicion_libreria: libreria IDENTIFICADOR . ';' codigo_libreria

    ';'  desplazar e ir al estado 16


Estado 12

   12 nombre: IDENTIFICADOR .

    $default  reduce usando la regla 12 (nombre)


Estado 13

    8 libreria: DE LIBRERIA nombre . IMPORTAR varios_identificadores ';'
   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR

    IMPORTAR       desplazar e ir al estado 17
    CUATRO_PUNTOS  desplazar e ir al estado 18


Estado 14

    7 libreria: IMPORTAR LIBRERIA nombre . ';'
    9         | IMPORTAR LIBRERIA nombre . COMO IDENTIFICADOR ';'
   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR

    COMO           desplazar e ir al estado 19
    CUATRO_PUNTOS  desplazar e ir al estado 18
    ';'            desplazar e ir al estado 20


Estado 15

    3 definicion_programa: programa IDENTIFICADOR ';' . codigo_programa

    DE        desplazar e ir al estado 1
    IMPORTAR  desplazar e ir al estado 2

    codigo_programa   ir al estado 21
    varias_librerias  ir al estado 22
    libreria          ir al estado 23


Estado 16

   14 definicion_libreria: libreria IDENTIFICADOR ';' . codigo_libreria

    DE        desplazar e ir al estado 1
    IMPORTAR  desplazar e ir al estado 2

    varias_librerias  ir al estado 24
    libreria          ir al estado 23
    codigo_libreria   ir al estado 25


Estado 17

    8 libreria: DE LIBRERIA nombre IMPORTAR . varios_identificadores ';'

    IDENTIFICADOR  desplazar e ir al estado 26

    varios_identificadores  ir al estado 27


Estado 18

   13 nombre: nombre CUATRO_PUNTOS . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 28


Estado 19

    9 libreria: IMPORTAR LIBRERIA nombre COMO . IDENTIFICADOR ';'

    IDENTIFICADOR  desplazar e ir al estado 29


Estado 20

    7 libreria: IMPORTAR LIBRERIA nombre ';' .

    $default  reduce usando la regla 7 (libreria)


Estado 21

    3 definicion_programa: programa IDENTIFICADOR ';' codigo_programa .

    $default  reduce usando la regla 3 (definicion_programa)


Estado 22

    4 codigo_programa: varias_librerias . cuerpo_subprograma
    6 varias_librerias: varias_librerias . libreria

    DE             desplazar e ir al estado 1
    IMPORTAR       desplazar e ir al estado 2
    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    SUBPROGRAMA    [reduce usando la regla 17 (varias_declaraciones)]
    TIPO           [reduce usando la regla 17 (varias_declaraciones)]
    IDENTIFICADOR  [reduce usando la regla 17 (varias_declaraciones)]
    $default       reduce usando la regla 17 (varias_declaraciones)

    libreria                 ir al estado 32
    varios_identificadores   ir al estado 33
    varias_declaraciones     ir al estado 34
    declaracion              ir al estado 35
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38
    cuerpo_subprograma       ir al estado 39


Estado 23

    5 varias_librerias: libreria .

    $default  reduce usando la regla 5 (varias_librerias)


Estado 24

    6 varias_librerias: varias_librerias . libreria
   15 codigo_libreria: varias_librerias . varias_declaraciones
   16                | varias_librerias . exportaciones varias_declaraciones

    DE             desplazar e ir al estado 1
    EXPORTAR       desplazar e ir al estado 40
    IMPORTAR       desplazar e ir al estado 2
    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    SUBPROGRAMA    [reduce usando la regla 17 (varias_declaraciones)]
    TIPO           [reduce usando la regla 17 (varias_declaraciones)]
    IDENTIFICADOR  [reduce usando la regla 17 (varias_declaraciones)]
    $default       reduce usando la regla 17 (varias_declaraciones)

    libreria                 ir al estado 32
    varios_identificadores   ir al estado 33
    varias_declaraciones     ir al estado 41
    exportaciones            ir al estado 42
    declaracion              ir al estado 35
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38


Estado 25

   14 definicion_libreria: libreria IDENTIFICADOR ';' codigo_libreria .

    $default  reduce usando la regla 14 (definicion_libreria)


Estado 26

   10 varios_identificadores: IDENTIFICADOR .

    $default  reduce usando la regla 10 (varios_identificadores)


Estado 27

    8 libreria: DE LIBRERIA nombre IMPORTAR varios_identificadores . ';'
   11 varios_identificadores: varios_identificadores . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 43
    ';'            desplazar e ir al estado 44


Estado 28

   13 nombre: nombre CUATRO_PUNTOS IDENTIFICADOR .

    $default  reduce usando la regla 13 (nombre)


Estado 29

    9 libreria: IMPORTAR LIBRERIA nombre COMO IDENTIFICADOR . ';'

    ';'  desplazar e ir al estado 45


Estado 30

   80 declaracion_subprograma: SUBPROGRAMA . cabecera_subprograma cuerpo_subprograma SUBPROGRAMA

    IDENTIFICADOR  desplazar e ir al estado 46

    cabecera_subprograma  ir al estado 47


Estado 31

   29 declaracion_tipo: TIPO . IDENTIFICADOR ES tipo_no_estructurado ';'
   30                 | TIPO . IDENTIFICADOR ES tipo_estructurado

    IDENTIFICADOR  desplazar e ir al estado 48


Estado 32

    6 varias_librerias: varias_librerias libreria .

    $default  reduce usando la regla 6 (varias_librerias)


Estado 33

   11 varios_identificadores: varios_identificadores . IDENTIFICADOR
   26 declaracion_objeto: varios_identificadores . ':' especificacion_tipo

    IDENTIFICADOR  desplazar e ir al estado 43
    ':'            desplazar e ir al estado 49


Estado 34

   19 varias_declaraciones: varias_declaraciones . declaracion
   95 cuerpo_subprograma: varias_declaraciones . PRINCIPIO varias_instrucciones FIN

    PRINCIPIO      desplazar e ir al estado 50
    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    varios_identificadores   ir al estado 33
    declaracion              ir al estado 51
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38


Estado 35

   18 varias_declaraciones: declaracion .

    $default  reduce usando la regla 18 (varias_declaraciones)


Estado 36

   23 declaracion: declaracion_objeto .

    $default  reduce usando la regla 23 (declaracion)


Estado 37

   24 declaracion: declaracion_tipo .

    $default  reduce usando la regla 24 (declaracion)


Estado 38

   25 declaracion: declaracion_subprograma .

    $default  reduce usando la regla 25 (declaracion)


Estado 39

    4 codigo_programa: varias_librerias cuerpo_subprograma .

    $default  reduce usando la regla 4 (codigo_programa)


Estado 40

   20 exportaciones: EXPORTAR . varios_nombres ';'

    IDENTIFICADOR  desplazar e ir al estado 12

    nombre          ir al estado 52
    varios_nombres  ir al estado 53


Estado 41

   15 codigo_libreria: varias_librerias varias_declaraciones .
   19 varias_declaraciones: varias_declaraciones . declaracion

    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    IDENTIFICADOR  [reduce usando la regla 15 (codigo_libreria)]
    $default       reduce usando la regla 15 (codigo_libreria)

    varios_identificadores   ir al estado 33
    declaracion              ir al estado 51
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38


Estado 42

   16 codigo_libreria: varias_librerias exportaciones . varias_declaraciones

    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    SUBPROGRAMA    [reduce usando la regla 17 (varias_declaraciones)]
    TIPO           [reduce usando la regla 17 (varias_declaraciones)]
    IDENTIFICADOR  [reduce usando la regla 17 (varias_declaraciones)]
    $default       reduce usando la regla 17 (varias_declaraciones)

    varios_identificadores   ir al estado 33
    varias_declaraciones     ir al estado 54
    declaracion              ir al estado 35
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38


Estado 43

   11 varios_identificadores: varios_identificadores IDENTIFICADOR .

    $default  reduce usando la regla 11 (varios_identificadores)


Estado 44

    8 libreria: DE LIBRERIA nombre IMPORTAR varios_identificadores ';' .

    $default  reduce usando la regla 8 (libreria)


Estado 45

    9 libreria: IMPORTAR LIBRERIA nombre COMO IDENTIFICADOR ';' .

    $default  reduce usando la regla 9 (libreria)


Estado 46

   81 cabecera_subprograma: IDENTIFICADOR . cero_uno_parametrizacion cero_uno_tipoResultado

    '('  desplazar e ir al estado 55

    $default  reduce usando la regla 82 (cero_uno_parametrizacion)

    cero_uno_parametrizacion  ir al estado 56
    parametrizacion           ir al estado 57


Estado 47

   80 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma . cuerpo_subprograma SUBPROGRAMA

    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    SUBPROGRAMA    [reduce usando la regla 17 (varias_declaraciones)]
    TIPO           [reduce usando la regla 17 (varias_declaraciones)]
    IDENTIFICADOR  [reduce usando la regla 17 (varias_declaraciones)]
    $default       reduce usando la regla 17 (varias_declaraciones)

    varios_identificadores   ir al estado 33
    varias_declaraciones     ir al estado 34
    declaracion              ir al estado 35
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38
    cuerpo_subprograma       ir al estado 58


Estado 48

   29 declaracion_tipo: TIPO IDENTIFICADOR . ES tipo_no_estructurado ';'
   30                 | TIPO IDENTIFICADOR . ES tipo_estructurado

    ES  desplazar e ir al estado 59


Estado 49

   26 declaracion_objeto: varios_identificadores ':' . especificacion_tipo

    DICCIONARIO    desplazar e ir al estado 60
    LISTA          desplazar e ir al estado 61
    SIGNO          desplazar e ir al estado 62
    IDENTIFICADOR  desplazar e ir al estado 12

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    nombre                ir al estado 63
    especificacion_tipo   ir al estado 64
    tipo_no_estructurado  ir al estado 65
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69


Estado 50

   95 cuerpo_subprograma: varias_declaraciones PRINCIPIO . varias_instrucciones FIN

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    nombre                             ir al estado 76
    varias_instrucciones               ir al estado 77
    instruccion                        ir al estado 78
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 51

   19 varias_declaraciones: varias_declaraciones declaracion .

    $default  reduce usando la regla 19 (varias_declaraciones)


Estado 52

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
   21 varios_nombres: nombre .

    CUATRO_PUNTOS  desplazar e ir al estado 18

    $default  reduce usando la regla 21 (varios_nombres)


Estado 53

   20 exportaciones: EXPORTAR varios_nombres . ';'
   22 varios_nombres: varios_nombres . nombre

    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 85

    nombre  ir al estado 86


Estado 54

   16 codigo_libreria: varias_librerias exportaciones varias_declaraciones .
   19 varias_declaraciones: varias_declaraciones . declaracion

    SUBPROGRAMA    desplazar e ir al estado 30
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    IDENTIFICADOR  [reduce usando la regla 16 (codigo_libreria)]
    $default       reduce usando la regla 16 (codigo_libreria)

    varios_identificadores   ir al estado 33
    declaracion              ir al estado 51
    declaracion_objeto       ir al estado 36
    declaracion_tipo         ir al estado 37
    declaracion_subprograma  ir al estado 38


Estado 55

   86 parametrizacion: '(' . varias_declaraciones_parametros declaracion_parametros ')'

    IDENTIFICADOR  desplazar e ir al estado 26

    IDENTIFICADOR  [reduce usando la regla 88 (varias_declaraciones_parametros)]

    varios_identificadores           ir al estado 87
    declaracion_parametros           ir al estado 88
    varias_declaraciones_parametros  ir al estado 89


Estado 56

   81 cabecera_subprograma: IDENTIFICADOR cero_uno_parametrizacion . cero_uno_tipoResultado

    DEVOLVER  desplazar e ir al estado 90

    $default  reduce usando la regla 84 (cero_uno_tipoResultado)

    cero_uno_tipoResultado  ir al estado 91
    tipo_resultado          ir al estado 92


Estado 57

   83 cero_uno_parametrizacion: parametrizacion .

    $default  reduce usando la regla 83 (cero_uno_parametrizacion)


Estado 58

   80 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma . SUBPROGRAMA

    SUBPROGRAMA  desplazar e ir al estado 93


Estado 59

   29 declaracion_tipo: TIPO IDENTIFICADOR ES . tipo_no_estructurado ';'
   30                 | TIPO IDENTIFICADOR ES . tipo_estructurado

    CLASE        desplazar e ir al estado 94
    DICCIONARIO  desplazar e ir al estado 60
    ENUMERACION  desplazar e ir al estado 95
    LISTA        desplazar e ir al estado 61
    REGISTRO     desplazar e ir al estado 96
    SIGNO        desplazar e ir al estado 62

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    tipo_no_estructurado  ir al estado 97
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69
    tipo_estructurado     ir al estado 98
    tipo_registro         ir al estado 99
    tipo_enumerado        ir al estado 100
    clase                 ir al estado 101


Estado 60

   41 tipo_diccionario: DICCIONARIO . DE especificacion_tipo

    DE  desplazar e ir al estado 102


Estado 61

   40 tipo_tabla: LISTA . DE especificacion_tipo

    DE  desplazar e ir al estado 103


Estado 62

   36 cero_o_uno_signo: SIGNO .

    $default  reduce usando la regla 36 (cero_o_uno_signo)


Estado 63

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
   27 especificacion_tipo: nombre .

    CUATRO_PUNTOS  desplazar e ir al estado 18

    $default  reduce usando la regla 27 (especificacion_tipo)


Estado 64

   26 declaracion_objeto: varios_identificadores ':' especificacion_tipo .

    $default  reduce usando la regla 26 (declaracion_objeto)


Estado 65

   28 especificacion_tipo: tipo_no_estructurado .

    $default  reduce usando la regla 28 (especificacion_tipo)


Estado 66

   31 tipo_no_estructurado: tipo_escalar .

    $default  reduce usando la regla 31 (tipo_no_estructurado)


Estado 67

   34 tipo_escalar: cero_o_uno_signo . TIPO_BASICO cero_o_uno_longitud cero_o_uno_rango

    TIPO_BASICO  desplazar e ir al estado 104


Estado 68

   32 tipo_no_estructurado: tipo_tabla .

    $default  reduce usando la regla 32 (tipo_no_estructurado)


Estado 69

   33 tipo_no_estructurado: tipo_diccionario .

    $default  reduce usando la regla 33 (tipo_no_estructurado)


Estado 70

  104 instruccion_devolver: DEVOLVER . cero_uno_expr ';'

    $default  reduce usando la regla 105 (cero_uno_expr)

    cero_uno_expr  ir al estado 105


Estado 71

  114 instruccion_lanzamiento_excepcion: LANZA . nombre ';'

    IDENTIFICADOR  desplazar e ir al estado 12

    nombre  ir al estado 106


Estado 72

  115 instruccion_captura_excepcion: PRUEBA . instruccion clausulas FIN PRUEBA

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    nombre                             ir al estado 76
    instruccion                        ir al estado 107
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 73

  110 instruccion_interrupcion: SALIR . cero_o_uno_de_identificador cero_o_uno_cuando ';'

    DE  desplazar e ir al estado 108

    $default  reduce usando la regla 112 (cero_o_uno_de_identificador)

    cero_o_uno_de_identificador  ir al estado 109


Estado 74

  109 instruccion_interrupcion: SIGUIENTE . cero_o_uno_cuando ';'

    $default  reduce usando la regla 111 (cero_o_uno_cuando)

    cero_o_uno_cuando  ir al estado 110


Estado 75

  103 instruccion: ';' .

    $default  reduce usando la regla 103 (instruccion)


Estado 76

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
  107 llamada_subprograma: nombre . '(' varias_definicion_parametro ')'

    CUATRO_PUNTOS  desplazar e ir al estado 18
    '('            desplazar e ir al estado 111


Estado 77

   95 cuerpo_subprograma: varias_declaraciones PRINCIPIO varias_instrucciones . FIN
   97 varias_instrucciones: varias_instrucciones . instruccion

    DEVOLVER       desplazar e ir al estado 70
    FIN            desplazar e ir al estado 112
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    nombre                             ir al estado 76
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 78

   96 varias_instrucciones: instruccion .

    $default  reduce usando la regla 96 (varias_instrucciones)


Estado 79

   98 instruccion: instruccion_devolver .

    $default  reduce usando la regla 98 (instruccion)


Estado 80

   99 instruccion: instruccion_llamada .

    $default  reduce usando la regla 99 (instruccion)


Estado 81

  106 instruccion_llamada: llamada_subprograma . ';'

    ';'  desplazar e ir al estado 114


Estado 82

  100 instruccion: instruccion_interrupcion .

    $default  reduce usando la regla 100 (instruccion)


Estado 83

  101 instruccion: instruccion_lanzamiento_excepcion .

    $default  reduce usando la regla 101 (instruccion)


Estado 84

  102 instruccion: instruccion_captura_excepcion .

    $default  reduce usando la regla 102 (instruccion)


Estado 85

   20 exportaciones: EXPORTAR varios_nombres ';' .

    $default  reduce usando la regla 20 (exportaciones)


Estado 86

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
   22 varios_nombres: varios_nombres nombre .

    CUATRO_PUNTOS  desplazar e ir al estado 18

    $default  reduce usando la regla 22 (varios_nombres)


Estado 87

   11 varios_identificadores: varios_identificadores . IDENTIFICADOR
   87 declaracion_parametros: varios_identificadores . ':' modo especificacion_tipo cero_uno_expresion

    IDENTIFICADOR  desplazar e ir al estado 43
    ':'            desplazar e ir al estado 115


Estado 88

   89 varias_declaraciones_parametros: declaracion_parametros . ';'

    ';'  desplazar e ir al estado 116


Estado 89

   86 parametrizacion: '(' varias_declaraciones_parametros . declaracion_parametros ')'
   90 varias_declaraciones_parametros: varias_declaraciones_parametros . declaracion_parametros ';'

    IDENTIFICADOR  desplazar e ir al estado 26

    varios_identificadores  ir al estado 87
    declaracion_parametros  ir al estado 117


Estado 90

   94 tipo_resultado: DEVOLVER . especificacion_tipo

    DICCIONARIO    desplazar e ir al estado 60
    LISTA          desplazar e ir al estado 61
    SIGNO          desplazar e ir al estado 62
    IDENTIFICADOR  desplazar e ir al estado 12

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    nombre                ir al estado 63
    especificacion_tipo   ir al estado 118
    tipo_no_estructurado  ir al estado 65
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69


Estado 91

   81 cabecera_subprograma: IDENTIFICADOR cero_uno_parametrizacion cero_uno_tipoResultado .

    $default  reduce usando la regla 81 (cabecera_subprograma)


Estado 92

   85 cero_uno_tipoResultado: tipo_resultado .

    $default  reduce usando la regla 85 (cero_uno_tipoResultado)


Estado 93

   80 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma SUBPROGRAMA .

    $default  reduce usando la regla 80 (declaracion_subprograma)


Estado 94

   55 clase: CLASE . cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN CLASE

    ULTIMA  desplazar e ir al estado 119

    $default  reduce usando la regla 56 (cero_uno_ultima)

    cero_uno_ultima  ir al estado 120


Estado 95

   50 tipo_enumerado: ENUMERACION . DE tipo_escalar varios_elemento_enumeracion FIN ENUMERACION

    DE  desplazar e ir al estado 121


Estado 96

   45 tipo_registro: REGISTRO . varios_campos FIN REGISTRO

    IDENTIFICADOR  desplazar e ir al estado 26

    varios_identificadores  ir al estado 122
    varios_campos           ir al estado 123
    campo                   ir al estado 124


Estado 97

   29 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado . ';'

    ';'  desplazar e ir al estado 125


Estado 98

   30 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_estructurado .

    $default  reduce usando la regla 30 (declaracion_tipo)


Estado 99

   42 tipo_estructurado: tipo_registro .

    $default  reduce usando la regla 42 (tipo_estructurado)


Estado 100

   43 tipo_estructurado: tipo_enumerado .

    $default  reduce usando la regla 43 (tipo_estructurado)


Estado 101

   44 tipo_estructurado: clase .

    $default  reduce usando la regla 44 (tipo_estructurado)


Estado 102

   41 tipo_diccionario: DICCIONARIO DE . especificacion_tipo

    DICCIONARIO    desplazar e ir al estado 60
    LISTA          desplazar e ir al estado 61
    SIGNO          desplazar e ir al estado 62
    IDENTIFICADOR  desplazar e ir al estado 12

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    nombre                ir al estado 63
    especificacion_tipo   ir al estado 126
    tipo_no_estructurado  ir al estado 65
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69


Estado 103

   40 tipo_tabla: LISTA DE . especificacion_tipo

    DICCIONARIO    desplazar e ir al estado 60
    LISTA          desplazar e ir al estado 61
    SIGNO          desplazar e ir al estado 62
    IDENTIFICADOR  desplazar e ir al estado 12

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    nombre                ir al estado 63
    especificacion_tipo   ir al estado 127
    tipo_no_estructurado  ir al estado 65
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69


Estado 104

   34 tipo_escalar: cero_o_uno_signo TIPO_BASICO . cero_o_uno_longitud cero_o_uno_rango

    LONGITUD  desplazar e ir al estado 128

    $default  reduce usando la regla 37 (cero_o_uno_longitud)

    cero_o_uno_longitud  ir al estado 129


Estado 105

  104 instruccion_devolver: DEVOLVER cero_uno_expr . ';'

    ';'  desplazar e ir al estado 130


Estado 106

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
  114 instruccion_lanzamiento_excepcion: LANZA nombre . ';'

    CUATRO_PUNTOS  desplazar e ir al estado 18
    ';'            desplazar e ir al estado 131


Estado 107

  115 instruccion_captura_excepcion: PRUEBA instruccion . clausulas FIN PRUEBA

    EXCEPCION   desplazar e ir al estado 132
    FINALMENTE  desplazar e ir al estado 133

    EXCEPCION  [reduce usando la regla 120 (varias_clausula_excepcion_especifica)]

    clausulas                             ir al estado 134
    clausulas_excepcion                   ir al estado 135
    varias_clausula_excepcion_especifica  ir al estado 136
    clausula_excepcion_especifica         ir al estado 137
    clausula_finalmente                   ir al estado 138


Estado 108

  113 cero_o_uno_de_identificador: DE . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 139


Estado 109

  110 instruccion_interrupcion: SALIR cero_o_uno_de_identificador . cero_o_uno_cuando ';'

    $default  reduce usando la regla 111 (cero_o_uno_cuando)

    cero_o_uno_cuando  ir al estado 140


Estado 110

  109 instruccion_interrupcion: SIGUIENTE cero_o_uno_cuando . ';'

    ';'  desplazar e ir al estado 141


Estado 111

  107 llamada_subprograma: nombre '(' . varias_definicion_parametro ')'

    $default  reduce usando la regla 108 (varias_definicion_parametro)

    varias_definicion_parametro  ir al estado 142


Estado 112

   95 cuerpo_subprograma: varias_declaraciones PRINCIPIO varias_instrucciones FIN .

    $default  reduce usando la regla 95 (cuerpo_subprograma)


Estado 113

   97 varias_instrucciones: varias_instrucciones instruccion .

    $default  reduce usando la regla 97 (varias_instrucciones)


Estado 114

  106 instruccion_llamada: llamada_subprograma ';' .

    $default  reduce usando la regla 106 (instruccion_llamada)


Estado 115

   87 declaracion_parametros: varios_identificadores ':' . modo especificacion_tipo cero_uno_expresion

    REFERENCIA  desplazar e ir al estado 143
    VALOR       desplazar e ir al estado 144

    modo  ir al estado 145


Estado 116

   89 varias_declaraciones_parametros: declaracion_parametros ';' .

    $default  reduce usando la regla 89 (varias_declaraciones_parametros)


Estado 117

   86 parametrizacion: '(' varias_declaraciones_parametros declaracion_parametros . ')'
   90 varias_declaraciones_parametros: varias_declaraciones_parametros declaracion_parametros . ';'

    ';'  desplazar e ir al estado 146
    ')'  desplazar e ir al estado 147


Estado 118

   94 tipo_resultado: DEVOLVER especificacion_tipo .

    $default  reduce usando la regla 94 (tipo_resultado)


Estado 119

   57 cero_uno_ultima: ULTIMA .

    $default  reduce usando la regla 57 (cero_uno_ultima)


Estado 120

   55 clase: CLASE cero_uno_ultima . cero_uno_superclases varias_declaraciones_componente FIN CLASE

    '('  desplazar e ir al estado 148

    $default  reduce usando la regla 58 (cero_uno_superclases)

    cero_uno_superclases  ir al estado 149
    superclases           ir al estado 150


Estado 121

   50 tipo_enumerado: ENUMERACION DE . tipo_escalar varios_elemento_enumeracion FIN ENUMERACION

    SIGNO  desplazar e ir al estado 62

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    tipo_escalar      ir al estado 151
    cero_o_uno_signo  ir al estado 67


Estado 122

   11 varios_identificadores: varios_identificadores . IDENTIFICADOR
   48 campo: varios_identificadores . ':' especificacion_tipo ';'
   49      | varios_identificadores . ':' especificacion_tipo ASIGNACION cero_uno_expresion ';'

    IDENTIFICADOR  desplazar e ir al estado 43
    ':'            desplazar e ir al estado 152


Estado 123

   45 tipo_registro: REGISTRO varios_campos . FIN REGISTRO
   47 varios_campos: varios_campos . campo

    FIN            desplazar e ir al estado 153
    IDENTIFICADOR  desplazar e ir al estado 26

    varios_identificadores  ir al estado 122
    campo                   ir al estado 154


Estado 124

   46 varios_campos: campo .

    $default  reduce usando la regla 46 (varios_campos)


Estado 125

   29 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado ';' .

    $default  reduce usando la regla 29 (declaracion_tipo)


Estado 126

   41 tipo_diccionario: DICCIONARIO DE especificacion_tipo .

    $default  reduce usando la regla 41 (tipo_diccionario)


Estado 127

   40 tipo_tabla: LISTA DE especificacion_tipo .

    $default  reduce usando la regla 40 (tipo_tabla)


Estado 128

   38 cero_o_uno_longitud: LONGITUD .

    $default  reduce usando la regla 38 (cero_o_uno_longitud)


Estado 129

   34 tipo_escalar: cero_o_uno_signo TIPO_BASICO cero_o_uno_longitud . cero_o_uno_rango

    $default  reduce usando la regla 39 (cero_o_uno_rango)

    cero_o_uno_rango  ir al estado 155


Estado 130

  104 instruccion_devolver: DEVOLVER cero_uno_expr ';' .

    $default  reduce usando la regla 104 (instruccion_devolver)


Estado 131

  114 instruccion_lanzamiento_excepcion: LANZA nombre ';' .

    $default  reduce usando la regla 114 (instruccion_lanzamiento_excepcion)


Estado 132

  123 clausula_excepcion_especifica: EXCEPCION . '(' nombre ')' varias_instrucciones

    '('  desplazar e ir al estado 156


Estado 133

  125 clausula_finalmente: FINALMENTE . varias_instrucciones

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    nombre                             ir al estado 76
    varias_instrucciones               ir al estado 157
    instruccion                        ir al estado 78
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 134

  115 instruccion_captura_excepcion: PRUEBA instruccion clausulas . FIN PRUEBA

    FIN  desplazar e ir al estado 158


Estado 135

  116 clausulas: clausulas_excepcion .
  117          | clausulas_excepcion . clausula_finalmente

    FINALMENTE  desplazar e ir al estado 133

    $default  reduce usando la regla 116 (clausulas)

    clausula_finalmente  ir al estado 159


Estado 136

  119 clausulas_excepcion: varias_clausula_excepcion_especifica . clausula_excepcion_general
  122 varias_clausula_excepcion_especifica: varias_clausula_excepcion_especifica . clausula_excepcion_especifica

    EXCEPCION  desplazar e ir al estado 160

    clausula_excepcion_especifica  ir al estado 161
    clausula_excepcion_general     ir al estado 162


Estado 137

  121 varias_clausula_excepcion_especifica: clausula_excepcion_especifica .

    $default  reduce usando la regla 121 (varias_clausula_excepcion_especifica)


Estado 138

  118 clausulas: clausula_finalmente .

    $default  reduce usando la regla 118 (clausulas)


Estado 139

  113 cero_o_uno_de_identificador: DE IDENTIFICADOR .

    $default  reduce usando la regla 113 (cero_o_uno_de_identificador)


Estado 140

  110 instruccion_interrupcion: SALIR cero_o_uno_de_identificador cero_o_uno_cuando . ';'

    ';'  desplazar e ir al estado 163


Estado 141

  109 instruccion_interrupcion: SIGUIENTE cero_o_uno_cuando ';' .

    $default  reduce usando la regla 109 (instruccion_interrupcion)


Estado 142

  107 llamada_subprograma: nombre '(' varias_definicion_parametro . ')'

    ')'  desplazar e ir al estado 164


Estado 143

   93 modo: REFERENCIA .

    $default  reduce usando la regla 93 (modo)


Estado 144

   92 modo: VALOR .

    $default  reduce usando la regla 92 (modo)


Estado 145

   87 declaracion_parametros: varios_identificadores ':' modo . especificacion_tipo cero_uno_expresion

    DICCIONARIO    desplazar e ir al estado 60
    LISTA          desplazar e ir al estado 61
    SIGNO          desplazar e ir al estado 62
    IDENTIFICADOR  desplazar e ir al estado 12

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    nombre                ir al estado 63
    especificacion_tipo   ir al estado 165
    tipo_no_estructurado  ir al estado 65
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69


Estado 146

   90 varias_declaraciones_parametros: varias_declaraciones_parametros declaracion_parametros ';' .

    $default  reduce usando la regla 90 (varias_declaraciones_parametros)


Estado 147

   86 parametrizacion: '(' varias_declaraciones_parametros declaracion_parametros ')' .

    $default  reduce usando la regla 86 (parametrizacion)


Estado 148

   60 superclases: '(' . nombre ')'

    IDENTIFICADOR  desplazar e ir al estado 12

    nombre  ir al estado 166


Estado 149

   55 clase: CLASE cero_uno_ultima cero_uno_superclases . varias_declaraciones_componente FIN CLASE

    ABSTRACTO      desplazar e ir al estado 167
    CONSTRUCTOR    desplazar e ir al estado 168
    DESTRUCTOR     desplazar e ir al estado 169
    ESPECIFICO     desplazar e ir al estado 170
    FINAL          desplazar e ir al estado 171
    GENERICO       desplazar e ir al estado 172
    PRIVADO        desplazar e ir al estado 173
    PROTEGIDO      desplazar e ir al estado 174
    PUBLICO        desplazar e ir al estado 175
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    ABSTRACTO    [reduce usando la regla 71 (varios_modificadores)]
    CONSTRUCTOR  [reduce usando la regla 71 (varios_modificadores)]
    DESTRUCTOR   [reduce usando la regla 71 (varios_modificadores)]
    ESPECIFICO   [reduce usando la regla 71 (varios_modificadores)]
    FINAL        [reduce usando la regla 71 (varios_modificadores)]
    GENERICO     [reduce usando la regla 71 (varios_modificadores)]
    $default     reduce usando la regla 71 (varios_modificadores)

    varios_identificadores           ir al estado 33
    declaracion_objeto               ir al estado 176
    declaracion_tipo                 ir al estado 177
    declaracion_componente           ir al estado 178
    varias_declaraciones_componente  ir al estado 179
    visibilidad                      ir al estado 180
    componente                       ir al estado 181
    varios_modificadores             ir al estado 182
    modificador                      ir al estado 183


Estado 150

   59 cero_uno_superclases: superclases .

    $default  reduce usando la regla 59 (cero_uno_superclases)


Estado 151

   50 tipo_enumerado: ENUMERACION DE tipo_escalar . varios_elemento_enumeracion FIN ENUMERACION

    IDENTIFICADOR  desplazar e ir al estado 184

    varios_elemento_enumeracion  ir al estado 185
    elemento_enumeracion         ir al estado 186


Estado 152

   48 campo: varios_identificadores ':' . especificacion_tipo ';'
   49      | varios_identificadores ':' . especificacion_tipo ASIGNACION cero_uno_expresion ';'

    DICCIONARIO    desplazar e ir al estado 60
    LISTA          desplazar e ir al estado 61
    SIGNO          desplazar e ir al estado 62
    IDENTIFICADOR  desplazar e ir al estado 12

    $default  reduce usando la regla 35 (cero_o_uno_signo)

    nombre                ir al estado 63
    especificacion_tipo   ir al estado 187
    tipo_no_estructurado  ir al estado 65
    tipo_escalar          ir al estado 66
    cero_o_uno_signo      ir al estado 67
    tipo_tabla            ir al estado 68
    tipo_diccionario      ir al estado 69


Estado 153

   45 tipo_registro: REGISTRO varios_campos FIN . REGISTRO

    REGISTRO  desplazar e ir al estado 188


Estado 154

   47 varios_campos: varios_campos campo .

    $default  reduce usando la regla 47 (varios_campos)


Estado 155

   34 tipo_escalar: cero_o_uno_signo TIPO_BASICO cero_o_uno_longitud cero_o_uno_rango .

    $default  reduce usando la regla 34 (tipo_escalar)


Estado 156

  123 clausula_excepcion_especifica: EXCEPCION '(' . nombre ')' varias_instrucciones

    IDENTIFICADOR  desplazar e ir al estado 12

    nombre  ir al estado 189


Estado 157

   97 varias_instrucciones: varias_instrucciones . instruccion
  125 clausula_finalmente: FINALMENTE varias_instrucciones .

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    $default  reduce usando la regla 125 (clausula_finalmente)

    nombre                             ir al estado 76
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 158

  115 instruccion_captura_excepcion: PRUEBA instruccion clausulas FIN . PRUEBA

    PRUEBA  desplazar e ir al estado 190


Estado 159

  117 clausulas: clausulas_excepcion clausula_finalmente .

    $default  reduce usando la regla 117 (clausulas)


Estado 160

  123 clausula_excepcion_especifica: EXCEPCION . '(' nombre ')' varias_instrucciones
  124 clausula_excepcion_general: EXCEPCION . varias_instrucciones

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75
    '('            desplazar e ir al estado 156

    nombre                             ir al estado 76
    varias_instrucciones               ir al estado 191
    instruccion                        ir al estado 78
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 161

  122 varias_clausula_excepcion_especifica: varias_clausula_excepcion_especifica clausula_excepcion_especifica .

    $default  reduce usando la regla 122 (varias_clausula_excepcion_especifica)


Estado 162

  119 clausulas_excepcion: varias_clausula_excepcion_especifica clausula_excepcion_general .

    $default  reduce usando la regla 119 (clausulas_excepcion)


Estado 163

  110 instruccion_interrupcion: SALIR cero_o_uno_de_identificador cero_o_uno_cuando ';' .

    $default  reduce usando la regla 110 (instruccion_interrupcion)


Estado 164

  107 llamada_subprograma: nombre '(' varias_definicion_parametro ')' .

    $default  reduce usando la regla 107 (llamada_subprograma)


Estado 165

   87 declaracion_parametros: varios_identificadores ':' modo especificacion_tipo . cero_uno_expresion

    $default  reduce usando la regla 91 (cero_uno_expresion)

    cero_uno_expresion  ir al estado 192


Estado 166

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
   60 superclases: '(' nombre . ')'

    CUATRO_PUNTOS  desplazar e ir al estado 18
    ')'            desplazar e ir al estado 193


Estado 167

   77 modificador: ABSTRACTO .

    $default  reduce usando la regla 77 (modificador)


Estado 168

   74 modificador: CONSTRUCTOR .

    $default  reduce usando la regla 74 (modificador)


Estado 169

   75 modificador: DESTRUCTOR .

    $default  reduce usando la regla 75 (modificador)


Estado 170

   78 modificador: ESPECIFICO .

    $default  reduce usando la regla 78 (modificador)


Estado 171

   79 modificador: FINAL .

    $default  reduce usando la regla 79 (modificador)


Estado 172

   76 modificador: GENERICO .

    $default  reduce usando la regla 76 (modificador)


Estado 173

   67 visibilidad: PRIVADO .

    $default  reduce usando la regla 67 (visibilidad)


Estado 174

   66 visibilidad: PROTEGIDO .

    $default  reduce usando la regla 66 (visibilidad)


Estado 175

   65 visibilidad: PUBLICO .

    $default  reduce usando la regla 65 (visibilidad)


Estado 176

   69 componente: declaracion_objeto .

    $default  reduce usando la regla 69 (componente)


Estado 177

   68 componente: declaracion_tipo .

    $default  reduce usando la regla 68 (componente)


Estado 178

   63 varias_declaraciones_componente: declaracion_componente .

    $default  reduce usando la regla 63 (varias_declaraciones_componente)


Estado 179

   55 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente . FIN CLASE
   64 varias_declaraciones_componente: varias_declaraciones_componente . declaracion_componente

    ABSTRACTO      desplazar e ir al estado 167
    CONSTRUCTOR    desplazar e ir al estado 168
    DESTRUCTOR     desplazar e ir al estado 169
    ESPECIFICO     desplazar e ir al estado 170
    FIN            desplazar e ir al estado 194
    FINAL          desplazar e ir al estado 171
    GENERICO       desplazar e ir al estado 172
    PRIVADO        desplazar e ir al estado 173
    PROTEGIDO      desplazar e ir al estado 174
    PUBLICO        desplazar e ir al estado 175
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    ABSTRACTO    [reduce usando la regla 71 (varios_modificadores)]
    CONSTRUCTOR  [reduce usando la regla 71 (varios_modificadores)]
    DESTRUCTOR   [reduce usando la regla 71 (varios_modificadores)]
    ESPECIFICO   [reduce usando la regla 71 (varios_modificadores)]
    FINAL        [reduce usando la regla 71 (varios_modificadores)]
    GENERICO     [reduce usando la regla 71 (varios_modificadores)]
    $default     reduce usando la regla 71 (varios_modificadores)

    varios_identificadores  ir al estado 33
    declaracion_objeto      ir al estado 176
    declaracion_tipo        ir al estado 177
    declaracion_componente  ir al estado 195
    visibilidad             ir al estado 180
    componente              ir al estado 181
    varios_modificadores    ir al estado 182
    modificador             ir al estado 183


Estado 180

   62 declaracion_componente: visibilidad . componente

    ABSTRACTO      desplazar e ir al estado 167
    CONSTRUCTOR    desplazar e ir al estado 168
    DESTRUCTOR     desplazar e ir al estado 169
    ESPECIFICO     desplazar e ir al estado 170
    FINAL          desplazar e ir al estado 171
    GENERICO       desplazar e ir al estado 172
    TIPO           desplazar e ir al estado 31
    IDENTIFICADOR  desplazar e ir al estado 26

    ABSTRACTO    [reduce usando la regla 71 (varios_modificadores)]
    CONSTRUCTOR  [reduce usando la regla 71 (varios_modificadores)]
    DESTRUCTOR   [reduce usando la regla 71 (varios_modificadores)]
    ESPECIFICO   [reduce usando la regla 71 (varios_modificadores)]
    FINAL        [reduce usando la regla 71 (varios_modificadores)]
    GENERICO     [reduce usando la regla 71 (varios_modificadores)]
    $default     reduce usando la regla 71 (varios_modificadores)

    varios_identificadores  ir al estado 33
    declaracion_objeto      ir al estado 176
    declaracion_tipo        ir al estado 177
    componente              ir al estado 196
    varios_modificadores    ir al estado 182
    modificador             ir al estado 183


Estado 181

   61 declaracion_componente: componente .

    $default  reduce usando la regla 61 (declaracion_componente)


Estado 182

   70 componente: varios_modificadores . declaracion_subprograma
   73 varios_modificadores: varios_modificadores . modificador

    ABSTRACTO    desplazar e ir al estado 167
    CONSTRUCTOR  desplazar e ir al estado 168
    DESTRUCTOR   desplazar e ir al estado 169
    ESPECIFICO   desplazar e ir al estado 170
    FINAL        desplazar e ir al estado 171
    GENERICO     desplazar e ir al estado 172
    SUBPROGRAMA  desplazar e ir al estado 30

    modificador              ir al estado 197
    declaracion_subprograma  ir al estado 198


Estado 183

   72 varios_modificadores: modificador .

    $default  reduce usando la regla 72 (varios_modificadores)


Estado 184

   53 elemento_enumeracion: IDENTIFICADOR . cero_o_uno_elemento_enumeracion

    $default  reduce usando la regla 54 (cero_o_uno_elemento_enumeracion)

    cero_o_uno_elemento_enumeracion  ir al estado 199


Estado 185

   50 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion . FIN ENUMERACION
   52 varios_elemento_enumeracion: varios_elemento_enumeracion . elemento_enumeracion

    FIN            desplazar e ir al estado 200
    IDENTIFICADOR  desplazar e ir al estado 184

    elemento_enumeracion  ir al estado 201


Estado 186

   51 varios_elemento_enumeracion: elemento_enumeracion .

    $default  reduce usando la regla 51 (varios_elemento_enumeracion)


Estado 187

   48 campo: varios_identificadores ':' especificacion_tipo . ';'
   49      | varios_identificadores ':' especificacion_tipo . ASIGNACION cero_uno_expresion ';'

    ASIGNACION  desplazar e ir al estado 202
    ';'         desplazar e ir al estado 203


Estado 188

   45 tipo_registro: REGISTRO varios_campos FIN REGISTRO .

    $default  reduce usando la regla 45 (tipo_registro)


Estado 189

   13 nombre: nombre . CUATRO_PUNTOS IDENTIFICADOR
  123 clausula_excepcion_especifica: EXCEPCION '(' nombre . ')' varias_instrucciones

    CUATRO_PUNTOS  desplazar e ir al estado 18
    ')'            desplazar e ir al estado 204


Estado 190

  115 instruccion_captura_excepcion: PRUEBA instruccion clausulas FIN PRUEBA .

    $default  reduce usando la regla 115 (instruccion_captura_excepcion)


Estado 191

   97 varias_instrucciones: varias_instrucciones . instruccion
  124 clausula_excepcion_general: EXCEPCION varias_instrucciones .

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    $default  reduce usando la regla 124 (clausula_excepcion_general)

    nombre                             ir al estado 76
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 192

   87 declaracion_parametros: varios_identificadores ':' modo especificacion_tipo cero_uno_expresion .

    $default  reduce usando la regla 87 (declaracion_parametros)


Estado 193

   60 superclases: '(' nombre ')' .

    $default  reduce usando la regla 60 (superclases)


Estado 194

   55 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN . CLASE

    CLASE  desplazar e ir al estado 205


Estado 195

   64 varias_declaraciones_componente: varias_declaraciones_componente declaracion_componente .

    $default  reduce usando la regla 64 (varias_declaraciones_componente)


Estado 196

   62 declaracion_componente: visibilidad componente .

    $default  reduce usando la regla 62 (declaracion_componente)


Estado 197

   73 varios_modificadores: varios_modificadores modificador .

    $default  reduce usando la regla 73 (varios_modificadores)


Estado 198

   70 componente: varios_modificadores declaracion_subprograma .

    $default  reduce usando la regla 70 (componente)


Estado 199

   53 elemento_enumeracion: IDENTIFICADOR cero_o_uno_elemento_enumeracion .

    $default  reduce usando la regla 53 (elemento_enumeracion)


Estado 200

   50 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion FIN . ENUMERACION

    ENUMERACION  desplazar e ir al estado 206


Estado 201

   52 varios_elemento_enumeracion: varios_elemento_enumeracion elemento_enumeracion .

    $default  reduce usando la regla 52 (varios_elemento_enumeracion)


Estado 202

   49 campo: varios_identificadores ':' especificacion_tipo ASIGNACION . cero_uno_expresion ';'

    $default  reduce usando la regla 91 (cero_uno_expresion)

    cero_uno_expresion  ir al estado 207


Estado 203

   48 campo: varios_identificadores ':' especificacion_tipo ';' .

    $default  reduce usando la regla 48 (campo)


Estado 204

  123 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' . varias_instrucciones

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    nombre                             ir al estado 76
    varias_instrucciones               ir al estado 208
    instruccion                        ir al estado 78
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 205

   55 clase: CLASE cero_uno_ultima cero_uno_superclases varias_declaraciones_componente FIN CLASE .

    $default  reduce usando la regla 55 (clase)


Estado 206

   50 tipo_enumerado: ENUMERACION DE tipo_escalar varios_elemento_enumeracion FIN ENUMERACION .

    $default  reduce usando la regla 50 (tipo_enumerado)


Estado 207

   49 campo: varios_identificadores ':' especificacion_tipo ASIGNACION cero_uno_expresion . ';'

    ';'  desplazar e ir al estado 209


Estado 208

   97 varias_instrucciones: varias_instrucciones . instruccion
  123 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' varias_instrucciones .

    DEVOLVER       desplazar e ir al estado 70
    LANZA          desplazar e ir al estado 71
    PRUEBA         desplazar e ir al estado 72
    SALIR          desplazar e ir al estado 73
    SIGUIENTE      desplazar e ir al estado 74
    IDENTIFICADOR  desplazar e ir al estado 12
    ';'            desplazar e ir al estado 75

    $default  reduce usando la regla 123 (clausula_excepcion_especifica)

    nombre                             ir al estado 76
    instruccion                        ir al estado 113
    instruccion_devolver               ir al estado 79
    instruccion_llamada                ir al estado 80
    llamada_subprograma                ir al estado 81
    instruccion_interrupcion           ir al estado 82
    instruccion_lanzamiento_excepcion  ir al estado 83
    instruccion_captura_excepcion      ir al estado 84


Estado 209

   49 campo: varios_identificadores ':' especificacion_tipo ASIGNACION cero_uno_expresion ';' .

    $default  reduce usando la regla 49 (campo)
